/**
 * @copyright Zack Qattan 2024
 * @license MIT
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).NativeWebKit={})}(this,(function(e){"use strict";class t{get eventTypes(){return[]}#e(e){return 0==this.eventTypes.length||this.eventTypes.includes(e)}#t(e){if(!this.#e(e))throw Error(`invalid event type "${e}"`)}#s;addEventListener(e,t,s){if(this.#t(e),this.#s||(this.#s={}),s?.once){const s=t;t=function t(i){s.apply(this,arguments),this.removeEventListener(e,t)}}const i=this.#s;i[e]||(i[e]=[]),i[e].includes(t)||i[e].push(t)}hasEventListener(e,t){return this.#t(e),this.#s?.[e]?.includes(t)}removeEventListener(e,t){if(this.#t(e),this.hasEventListener(e,t)){const s=this.#s[e].indexOf(t);return this.#s[e].splice(s,1),!0}return!1}dispatchEvent(e){if(this.#t(e.type),this.#s?.[e.type]){e.target=this;const t=this.#s[e.type].slice(0);for(let s=0,i=t.length;s<i;s++)t[s].call(this,e)}}get _prefix(){return""}_formatMessage(e){const t={...e};return t.type=`${this._prefix}-${e.type}`,t}}const{userAgent:s}=navigator,i=/NativeWebKit/i.test(s),n=Boolean(window.isNativeWebKitSafariExtensionInstalled),a=i||n;class o{#i=function(){};set prefix(e){const t=[console];e&&(Array.isArray(e)?t.push(...e):t.push(e)),this.#n=console.log.bind(...t),this.#a=console.warn.bind(...t),this.#o=console.error.bind(...t)}isLoggingEnabled=!1;get log(){return this.#i}#n=console.log.bind(console);isWarningEnabled=!0;get warn(){return this.#i}#a=console.warn.bind(console);isErrorEnabled=!0;get error(){return this.#i}#o=console.error.bind(console);set isEnabled(e){this.isLoggingEnabled=e,this.isWarningEnabled=e,this.isErrorEnabled=e}constructor(e){e&&(this.prefix=e)}}const r=new o,l=new Set;const d={};function c(e,t){r.log(`adding callback with prefix "${t}"`,e),d[t]||(d[t]=[]),d[t].push(e)}function h(e){Array.isArray(e)||(e=[e]),r.log("nativewebkit-receive messages",e),e.forEach((e=>{const[t,s]=e.type.split("-");r.log(`received "${t}" message of type "${s}"`,e),e.type=s,d[t]&&0!=d[t].length?d[t].forEach((t=>{r.log("triggering callback",t,"for message",e),t(e)})):r.warn("no callbacks listening for prefix",t)}))}async function p(e){if(a){if(r.log("sending message to app...",e),i){const t=await webkit.messageHandlers.nativewebkit_reply.postMessage(e);return r.log("app response",t),t&&h(t),!0}return new Promise((t=>{const s=function(){for(var e=0;l.has(e);)e++;return l.add(e),e}();window.dispatchEvent(new CustomEvent("nativewebkit-send",{detail:{message:e,id:s}})),window.addEventListener(`nativewebkit-receive-${s}`,(e=>{const i=e.detail;r.log(`did receive message for nativewebkit-receive-${s}?`,i),i||r.error(`didn't receive message for nativewebkit-receive-${s}`),t(i),l.delete(s)}),{once:!0})}))}r.warn("NativeWebKit.js is not enabled - run in the NativeWebKit app or enable the NativeWebKit Safari Web Extension")}window.__NATIVEWEBKIT_LISTENER_FLAG__||(window.__NATIVEWEBKIT_LISTENER_FLAG__=!0,r.log('adding "nativewebkit-receive" window listener'),window.addEventListener("nativewebkit-receive",(e=>{h(e.detail)})));const g=new o;function v(e,t){return 0===t?e:v(t,e%t)}function u(e){if(g.log("finding greatestCommonFactor of numbers",e),0==(e=e.filter((e=>e>0))).length)return null;const t=e.reduce(((e,t)=>v(e,t)));return g.log("greatestCommonFactor",t),0==t?null:t}const b=new o("AppMessagePoll");class m{static get#r(){return n}static#l=[];static#d(e){return this.#l.includes(e)?(b.log("poll already included"),this.#l.indexOf(e)):this.#l.push(e)}static#c(e){return this.#l.includes(e)?(e.stop(),this.#l.splice(e,e.#h),this.#p(),!0):(b.log("poll wasn't included"),!1)}get#h(){return m.#l.indexOf(this)}#g;#v;#u=0;get interval(){return this.#v}set interval(e){e<=0?b.error(`invalid interval ${e}ms`):e!=this.#v?(this.#v=e,this.#b&&m.#p()):b.warn("assigning same interval")}constructor(e,t){this.#g=e,this.#v=t,m.#d(this)}static#m=null;static get#w(){return null!=this.#m}static#f=null;static get#A(){return this.#l.filter((e=>e.#y))}static get#E(){return this.#A.map((e=>e.#v))}static#M(){var e=u(this.#E);if(b.log(`new interval ${e}`),this.#f!=e)return b.log(`interval updated from ${this.#f} to ${e}`),this.#f=e,!0}static async#L(){const e=Date.now(),t=this.#A.filter((t=>e-t.#u>=t.#v)),s=t.map((e=>e.#g()));if(b.log("messages",s),s.length>0){const e=await p(s);b.log("didReceiveMessage?",e),e||b.error("app didn't receive message")}else b.log("no messages to send");t.forEach((t=>t.#u=e))}static#k(){this.#w?b.log("tried to start AppMessagePoll when it's already running"):null!=this.#f?(b.log(`starting interval at ${this.#f}`),this.#m=window.setInterval(this.#L.bind(this),this.#f)):b.log("null interval")}static#I(){this.#w?(window.clearInterval(this.#m),this.#m=null):b.log("tried to stop AppMessagePoll when it already isn't running")}static#p(e=!1){if(!this.#w&&!e)return;const t=this.#M();this.#w||t?(b.log("restarting..."),this.#I(),this.#k()):b.log("no need to restart")}#y=!1;get#b(){return m.#w&&this.#y}start(){m.#r?this.#b?b.log("poll is already running"):(this.#y=!0,m.#p(!0)):b.warn("polling is not enabled")}stop(){this.#b&&(this.#y=!1,m.#p())}destroy(){b.log("destroying poll",this),m.#c(this)}}const w=new o("AudioSessionManager");class f extends t{static#U=[];get eventTypes(){return f.#U}static#T=new f;static get shared(){return this.#T}get _prefix(){return"as"}_formatMessage(e){return super._formatMessage(e)}addEventListener(e,t,s){return super.addEventListener(...arguments)}removeEventListener(e,t){return super.removeEventListener(...arguments)}hasEventListener(e,t){return super.hasEventListener(...arguments)}dispatchEvent(e){return super.dispatchEvent(...arguments)}constructor(){if(super(),this.shared)throw new Error("AudioSessionManager is a singleton - use AudioSessionManager.shared");c(this.#_.bind(this),this._prefix),window.addEventListener("load",(()=>{})),window.addEventListener("unload",(()=>{}))}#_(e){w.log(`received background message of type ${e.type}`,e);const{type:t}=e;w.error(`uncaught message type ${t}`)}}var A=f.shared;const y=new o("HeadphoneMotionManager");class E extends t{static#U=["isAvailable","isActive","motionData","sensorLocation"];get eventTypes(){return E.#U}static#T=new E;static get shared(){return this.#T}get _prefix(){return"hm"}_formatMessage(e){return super._formatMessage(e)}addEventListener(e,t,s){return super.addEventListener(...arguments)}removeEventListener(e,t){return super.removeEventListener(...arguments)}hasEventListener(e,t){return super.hasEventListener(...arguments)}dispatchEvent(e){return super.dispatchEvent(...arguments)}constructor(){if(super(),this.shared)throw new Error("HeadphoneMotionManager is a singleton - use HeadphoneMotionManager.shared");c(this.#_.bind(this),this._prefix),window.addEventListener("load",(()=>{this.#D&&this.checkIsAvailable()})),window.addEventListener("unload",(()=>{this.#x&&this.#$&&this.stopUpdates()}))}#D=!1;get checkAvailabilityOnLoad(){return this.#D}set checkAvailabilityOnLoad(e){if("boolean"!=typeof e)throw Error("invalid newValue for checkAvailabilityOnLoad",e);this.#D=e}#$=!1;get stopUpdatesOnUnload(){return this.#$}set stopUpdatesOnUnload(e){if("boolean"!=typeof e)throw Error("invalid newValue for stopUpdatesOnUnload",e);this.#$=e}#_(e){y.log(`received background message of type ${e.type}`,e);const{type:t}=e;switch(t){case"isAvailable":this.#O(e.isAvailable);break;case"isActive":this.#P(e.isActive);break;case"getData":this.#W(e.motionData);break;default:y.error(`uncaught message type ${t}`)}}#R=null;get isAvailable(){return Boolean(this.#R)}#O(e){this.#R!=e&&(this.#R=e,y.log(`updated isAvailable to ${e}`),this.dispatchEvent({type:"isAvailable",message:{isAvailable:this.isAvailable}}),this.#R&&this.checkIsActive())}async checkIsAvailable(){y.log("checking isAvailable..."),await p(this.#C)}get#C(){return this._formatMessage({type:"isAvailable"})}#x=null;get isActive(){return Boolean(this.#x)}#P(e){this.#x!=e&&(this.#x=e,y.log(`updated isActive to ${this.isActive}`),this.dispatchEvent({type:"isActive",message:{isActive:this.isActive}}),this.#S.stop(),this.#x?(y.log("starting motion data poll"),this.#V.start()):(y.log("stopping motion data poll"),this.#V.stop()))}async checkIsActive(){y.log("checking isActive"),await p(this.#N())}#N(){return this._formatMessage({type:"isActive"})}#S=new m(this.#N.bind(this),50);async startUpdates(){this.isAvailable?this.isActive?y.warn("already active"):(y.log("starting motion updates"),this.#S.start(),await p(this.#H)):y.warn("not available")}get#H(){return this._formatMessage({type:"startUpdates"})}async stopUpdates(){this.isAvailable?this.isActive?(y.log("stopping motion updates"),this.#S.start(),await p(this.#F)):y.warn("already inactive"):y.warn("not available")}get#F(){return this._formatMessage({type:"stopUpdates"})}async toggleMotionUpdates(){this.isAvailable?this.isActive?await this.stopUpdates():await this.startUpdates():y.log("not available")}#K;get motionData(){return this.#K}get#B(){return this.motionData?.timestamp||0}#j=null;get sensorLocation(){return this.#j}#G(e){this.#j!=e&&(this.#j=e,y.log(`updated sensor location to ${e}`),this.dispatchEvent({type:"sensorLocation",message:{sensorLocation:this.sensorLocation}}))}#W(e){this.#K=e,y.log("received headphone motion data",this.motionData),this.dispatchEvent({type:"motionData",message:{motionData:this.motionData}}),this.#G(e.sensorLocation)}async checkMotionData(){y.log("checkMotionData"),await p(this.#q)}#q(){return this._formatMessage({type:"getData",timestamp:this.#B})}#V=new m(this.#q.bind(this),20)}var M=E.shared;e.AudioSessionManager=A,e.HeadphoneMotionManager=M}));
