/**
 * @copyright Zack Qattan 2024
 * @license MIT
 */
const e=!1;function t(){}const i=console.log.bind(console),s=console.warn.bind(console),r=console.error.bind(console),a=console.assert.bind(console);class n{static#e={};constructor(e){if(n.#e[e])throw new Error(`"${e}" console already exists`);n.#e[e]=this}#t={log:e,warn:e,error:e};setLevelFlags(e){Object.assign(this.#t,e)}static setLevelFlagsForType(e,t){if(!this.#e[e])throw new Error(`no console found with type "${e}"`);this.#e[e].setLevelFlags(t)}static setAllLevelFlags(e){for(const t in this.#e)this.#e[t].setLevelFlags(e)}static create(e,t){return this.#e[e]||new n(e)}get log(){return this.#t.log?i:t}get warn(){return this.#t.warn?s:t}get error(){return this.#t.error?r:t}get assert(){return this.#t.assert?a:t}assertWithError(e,t){if(!e)throw new Error(t)}assertTypeWithError(e,t){this.assertWithError(typeof e==t,`value of type "${typeof e}" not of type "${t}"`)}}function c(e,t){return n.create(e,t)}const o=c("EventDispatcher",{log:!1});class h{constructor(e){o.assertWithError(Array.isArray(e),"eventTypes must be an array"),this.#i=e}#i;#s(e){return!this.#i||this.#i.includes(e)}#r(e){o.assertWithError(this.#s(e),`invalid event type "${e}"`)}#a;addEventListener(e,t,i){if(o.log(`adding "${e}" eventListener`,t),this.#r(e),this.#a||(this.#a={}),i?.once){const i=t;t=function t(s){i.apply(this,arguments),this.removeEventListener(e,t)}}const s=this.#a;s[e]||(s[e]=[]),s[e].includes(t)||s[e].push(t)}hasEventListener(e,t){return o.log(`has "${e}" eventListener?`,t),this.#r(e),this.#a?.[e]?.includes(t)}removeEventListener(e,t){if(o.log(`removing "${e}" eventListener`,t),this.#r(e),this.hasEventListener(e,t)){const i=this.#a[e].indexOf(t);return this.#a[e].splice(i,1),!0}return!1}dispatchEvent(e){if(this.#r(e.type),this.#a?.[e.type]){e.target=this;const t=this.#a[e.type].slice(0);for(let i=0,s=t.length;i<s;i++)t[i].call(this,e)}}get _prefix(){return""}formatMessage(e){const t={...e};return t.type=`${this._prefix}-${e.type}`,t}}const l=c("platformUtils",{log:!1}),{userAgent:d}=navigator,p=/Safari/i.test(d)&&!/Chrome/i.test(d),g=/NativeWebKit/i.test(d);var u=Boolean(window.isNativeWebKitSafariExtensionInstalled);const v=async()=>!!(u=u||Boolean(window.isNativeWebKitSafariExtensionInstalled))||(l.log("checking if Safari Extension is installed..."),new Promise((e=>{const t=()=>{l.log("Safari Extension is installed"),u=!0,e(!0)};window.addEventListener("nativewebkit-extension-is-installed",t,{once:!0}),window.dispatchEvent(new Event("is-nativewebkit-extension-installed")),window.setTimeout((()=>{u||(l.log("Safari Extension is not installed"),window.removeEventListener("nativewebkit-extension-is-installed",t),e(!1))}),1)})));const f=async()=>!!(g||u)||await v(),y=/iPad|iPhone|iPod/.test(d),m=/Macintosh/.test(d),S=c("messaging",{log:!1}),b=new Set;const k={};function U(e,t){S.log(`adding callback with prefix "${t}"`,e),k[t]||(k[t]=[]),k[t].push(e)}function I(e){Array.isArray(e)||(e=[e]),e=e.flatMap((e=>"messages"==e.type?e.messages:e)),S.log("nativewebkit-receive messages",e),e.forEach((e=>{const[t,i]=e.type.split("-");S.log(`received "${t}" message of type "${i}"`,e),e.type=i,k[t]&&0!=k[t].length?k[t].forEach((t=>{S.log("triggering callback",t,"for message",e),t(e)})):S.warn("no callbacks listening for prefix",t)}))}window.__NATIVEWEBKIT_MESSAGING_FLAG__||(window.__NATIVEWEBKIT_MESSAGING_FLAG__=!0,S.log('adding "nativewebkit-receive" window listener'),window.addEventListener("nativewebkit-receive",(e=>{I(e.detail)})),window.addEventListener("load",(()=>{S.log("triggering window.load events...");const e=k["window.load"]?.map((e=>e())).flat().filter(Boolean);e.length>0&&A(e)})),window.addEventListener("unload",(()=>{S.log("triggering window.unload events...");const e=k["window.unload"]?.map((e=>e())).flat().filter(Boolean);e.length>0&&A(e)})));var w,C,E=[];async function A(e,t=!0){if(await f()){if(S.log("requesting to send message",e,"send immediately?",t),!e&&0==E.length)return void S.warn("no messages received, and no pending messages");if(e&&(0==E.length&&(w=new Promise((e=>{C=e}))),E.push(e),E=E.flat()),0==E.length)return void S.log("no messages to send");if(!t)return w;if(S.log("sending messages to app...",E),g){const e=await webkit.messageHandlers.nativewebkit_reply.postMessage(E);S.log("app response",e),e&&I(e),C(!0)}else{const e=function(){for(var e=0;b.has(e);)e++;return b.add(e),e}();window.dispatchEvent(new CustomEvent("nativewebkit-send",{detail:{message:E,id:e}})),window.addEventListener(`nativewebkit-receive-${e}`,(t=>{const i=t.detail;S.log(`did receive message for nativewebkit-receive-${e}?`,i),i||S.error(`didn't receive message for nativewebkit-receive-${e}`),C(i),b.delete(e)}),{once:!0})}return E.length=0,w}S.warn("NativeWebKit.js is not enabled - run in the NativeWebKit app or enable the NativeWebKit Safari Web Extension")}const T=c("mathUtils",{log:!1});function D(e,t){return 0===t?e:D(t,e%t)}function O(e){if(T.log("finding greatestCommonFactor of numbers",e),0==(e=e.filter((e=>e>0))).length)return null;const t=e.reduce(((e,t)=>D(e,t)));return T.log("greatestCommonFactor",t),0==t?null:t}const P=c("AppMessagePoll",{log:!1});class M{#n=!1;async#c(){if(!await f())return!1;if(g)return this.#n;return await v()}static#o=[];static#h(e){return this.#o.includes(e)?(P.log("poll already included"),this.#o.indexOf(e)):this.#o.push(e)}static#l(e){return this.#o.includes(e)?(e.stop(),this.#o.splice(e,e.#d),this.#p(),!0):(P.log("poll wasn't included"),!1)}get#d(){return M.#o.indexOf(this)}#g;#u="";#v;#f=0;get interval(){return this.#v}set interval(e){P.assertWithError(e>0,`invalid interval ${e}ms`),e!=this.#v?(this.#v=e,this.#y&&M.#p()):P.warn("assigning same interval")}constructor(e,t,i,s=!1){if("function"==typeof e){const t=e;this.#g=t}else{const t=e;this.#g=()=>t}this.#u=t,this.#v=i,this.#n=s,M.#h(this)}static#m=null;static get#S(){return null!=this.#m}static#b=null;static get#k(){return this.#o.filter((e=>e.#U))}static get#I(){return this.#k.map((e=>e.#v))}static#w(){var e=O(this.#I);if(P.log(`new interval ${e}`),this.#b!=e)return P.log(`interval updated from ${this.#b} to ${e}`),this.#b=e,!0}static async#C(){const e=Date.now(),t=this.#k.filter((t=>e-t.#f>=t.#v)),i=t.map((e=>{var t=e.#g();return t?(Array.isArray(t)||(t=[t]),t=t.map((t=>((t=Object.assign({},t)).type=`${e.#u}-${t.type}`,t)))):[]})).flat();if(P.log("messages",i),i.length>0){const e=await A(i);P.log("didReceiveMessage?",e),e||P.error("app didn't receive message")}else P.log("no messages to send");t.forEach((t=>t.#f=e))}static#E(){this.#S?P.log("tried to start AppMessagePoll when it's already running"):null!=this.#b?(P.log(`starting interval at ${this.#b}`),this.#m=window.setInterval(this.#C.bind(this),this.#b)):P.log("null interval")}static#A(){this.#S?(window.clearInterval(this.#m),this.#m=null):P.log("tried to stop AppMessagePoll when it already isn't running")}static#p(e=!1){if(!this.#S&&!e)return;const t=this.#w();this.#S||t?(P.log("restarting..."),this.#A(),this.#E()):P.log("no need to restart")}#U=!1;get#y(){return M.#S&&this.#U}async start(){await this.#c()&&(this.#y?P.log("poll is already running"):(this.#U=!0,M.#p(!0)))}stop(){this.#y&&(this.#U=!1,M.#p())}destroy(){P.log("destroying poll",this),M.#l(this)}}const L=c("HeadphoneMotionManager",{log:!1});class V{static#T=["isAvailable","isActive","motionData","sensorLocation"];get eventTypes(){return V.#T}#D=new h(this.eventTypes);addEventListener(e,t,i){return this.#D.addEventListener(e,t,i)}removeEventListener(e,t){return this.#D.removeEventListener(e,t)}hasEventListener(e,t){return this.#D.hasEventListener(e,t)}#O(e){return this.#D.dispatchEvent(e)}static#P=new V;static get shared(){return this.#P}#u="hm";#M(e){return e.map((e=>Object.assign({},e,{type:`${this.#u}-${e.type}`})))}constructor(){L.assertWithError(!this.shared,"HeadphoneMotionManager is a singleton - use HeadphoneMotionManager.shared"),U(this.#L.bind(this),"window.load"),U(this.#V.bind(this),this.#u),U(this.#W.bind(this),"window.unload")}#L(){const e=[];return this.#R&&e.push({type:"isAvailable"}),this.#M(e)}#W(){const e=[];return this.#$&&this.#_&&e.push({type:"stopUpdates"}),this.#M(e)}async#x(e){return e.type=`${this.#u}-${e.type}`,A(e)}#R=!1;get checkAvailabilityOnLoad(){return this.#R}set checkAvailabilityOnLoad(e){L.assertTypeWithError(e,"boolean"),this.#R=e}#_=!0;get stopUpdatesOnUnload(){return this.#_}set stopUpdatesOnUnload(e){L.assertTypeWithError(e,"boolean"),this.#_=e}#V(e){L.log(`received background message of type ${e.type}`,e);const{type:t}=e;switch(t){case"isAvailable":this.#N(e.isAvailable);break;case"isActive":this.#j(e.isActive);break;case"getData":this.#F(e.motionData);break;default:throw Error(`uncaught message type ${t}`)}}#B=null;get isAvailable(){return Boolean(this.#B)}#G(){L.assert(this.isAvailable,"not available")}#N(e){this.#B!=e&&(this.#B=e,L.log(`updated isAvailable to ${e}`),this.#O({type:"isAvailable",message:{isAvailable:this.isAvailable}}),this.#B&&this.#K())}async#H(){return L.log("checking isAvailable..."),this.#x({type:"isAvailable"})}#$=null;get isActive(){return Boolean(this.#$)}#j(e){this.#$!=e&&(this.#$=e,L.log(`updated isActive to ${this.isActive}`),this.#O({type:"isActive",message:{isActive:this.isActive}}),this.#q.stop(),this.#$?(L.log("starting motion data poll"),this.#z.start()):(L.log("stopping motion data poll"),this.#z.stop()))}async#K(){return L.log("checking isActive"),this.#x({type:"isActive"})}#q=new M({type:"isActive"},this.#u,50,!0);async startUpdates(){if(this.#G(),!this.isActive)return L.log("starting motion updates"),this.#q.start(),this.#x({type:"startUpdates"});L.warn("already active")}async stopUpdates(){if(this.#G(),this.isActive)return L.log("stopping motion updates"),this.#q.start(),this.#x({type:"stopUpdates"});L.warn("already inactive")}async toggleMotionUpdates(){return this.#G(),this.isActive?this.stopUpdates():this.startUpdates()}#J;get motionData(){return this.#J}get#Q(){return this.motionData?.timestamp||0}#X=null;get sensorLocation(){return this.#X}#Y(e){this.#X!=e&&(this.#X=e,L.log(`updated sensor location to ${e}`),this.#O({type:"sensorLocation",message:{sensorLocation:this.sensorLocation}}))}#F(e){this.#J=e,L.log("received headphone motion data",this.motionData),this.#O({type:"motionData",message:{motionData:this.motionData}}),this.#Y(e.sensorLocation)}#Z(){return{type:"getData",timestamp:this.#Q}}#z=new M(this.#Z.bind(this),this.#u,20)}var W=V.shared;function R(e,t){if("object"!=typeof e||"object"!=typeof t)return!1;const i=Object.keys(e),s=Object.keys(t);if(i.length!=s.length)return!1;return i.every((i=>i in t&&e[i]==t[i]))}const $=c("ARSession",{log:!1});class _{static#T=["worldTrackingSupport","faceTrackingSupport","bodyTrackingSupport","isRunning","frame","camera","faceAnchors","debugOptions","cameraMode","configuration","showCamera","lightEstimate","messageConfiguration","planeAnchors","bodyAnchors"];get eventTypes(){return _.#T}#D=new h(this.eventTypes);addEventListener(e,t,i){return this.#D.addEventListener(...arguments)}removeEventListener(e,t){return this.#D.removeEventListener(...arguments)}hasEventListener(e,t){return this.#D.hasEventListener(...arguments)}#O(e){return this.#D.dispatchEvent(...arguments)}static#P=new _;static get shared(){return this.#P}#u="ars";#M(e){return e.map((e=>Object.assign({},e,{type:`${this.#u}-${e.type}`})))}constructor(){$.assertWithError(!this.shared,"ARSessionManager is a singleton - use ARSessionManager.shared"),U(this.#L.bind(this),"window.load"),U(this.#V.bind(this),this.#u),U(this.#W.bind(this),"window.unload")}get isSupported(){return y&&g}#ee(){if(!this.isSupported)throw m?Error("AR Session is not supported on Mac"):Error("AR Session not supported in iOS Safari")}#te(){$.assertWithError(this.isRunning,"ARSession is not running")}async#x(e){return e.type=`${this.#u}-${e.type}`,A(e)}#L(){if(!this.isSupported)return;const e=[];return this.checkFaceTrackingSupportOnLoad&&e.push({type:"faceTrackingSupport"}),this.checkWorldTrackingSupportOnLoad&&e.push({type:"worldTrackingSupport"}),this.checkBodyTrackingSupportOnLoad&&e.push({type:"bodyTrackingSupport"}),this.checkIsRunningOnLoad&&e.push({type:"isRunning"}),this.checkDebugOptionsOnLoad&&e.push({type:"debugOptions"}),this.checkCameraModeOnLoad&&e.push({type:"cameraMode"}),this.checkShowCameraOnLoad&&e.push({type:"showCamera"}),this.#M(e)}#W(){if(!this.isSupported)return;const e=[];return this.pauseOnUnload&&this.isRunning&&e.push({type:"pause"}),this.#M(e)}#ie={isSupported:null,supportsUserFaceTracking:null};get worldTrackingSupport(){return this.#ie}#se(e){R(this.#ie,e)||(this.#ie=e,$.log("updated worldTrackingSupport",e),this.#O({type:"worldTrackingSupport",message:{worldTrackingSupport:this.worldTrackingSupport}}))}#re=!1;get checkWorldTrackingSupportOnLoad(){return this.#re}set checkWorldTrackingSupportOnLoad(e){$.assertTypeWithError(e,"boolean"),this.#re=e}#ae={isSupported:null};get bodyTrackingSupport(){return this.#ae}#ne(e){R(this.#ae,e)||(this.#ae=e,$.log("updated bodyTrackingSupport",e),this.#O({type:"bodyTrackingSupport",message:{bodyTrackingSupport:this.bodyTrackingSupport}}))}#ce=!1;get checkBodyTrackingSupportOnLoad(){return this.#ce}set checkBodyTrackingSupportOnLoad(e){$.assertTypeWithError(e,"boolean"),this.#ce=e}#oe={isSupported:null,supportsWorldTracking:null};get faceTrackingSupport(){return this.#oe}#he(e){R(this.#oe,e)||(this.#oe=e,$.log("updated faceTrackingSupport",e),this.#O({type:"faceTrackingSupport",message:{faceTrackingSupport:this.faceTrackingSupport}}))}#le=!1;get checkFaceTrackingSupportOnLoad(){return this.#le}set checkFaceTrackingSupportOnLoad(e){$.assertTypeWithError(e,"boolean"),this.#le=e}#y=!1;get isRunning(){return this.#y}#de(e){this.#y!=e&&(this.#y=e,$.log(`updated isRunning to ${e}`),this.#O({type:"isRunning",message:{isRunning:this.isRunning}}),this.isRunning&&this.#pe())}#ge=!1;get checkIsRunningOnLoad(){return this.#ge}set checkIsRunningOnLoad(e){$.assertTypeWithError(e,"boolean"),this.#ge=e}#ue=!0;get pauseOnUnload(){return this.#ue}set pauseOnUnload(e){$.assertTypeWithError(e,"boolean"),this.#ue=e}#ve(e){switch($.log("assertConfigurationIsValid",e),$.assertWithError(e,"configuration required to run ARSession"),$.assertWithError(e.type,'"type" property required in configuration"'),$.assertWithError(this.allConfigurationTypes.includes(e.type),`invalid configuration type "${e.type}"`),e.type){case"worldTracking":const t=Object.keys(e).find((e=>"type"!==e&&!this.#fe.includes(e)));$.assertWithError(!t,`invalid worldTracking configuration key "${t}"`);const i=e;$.assertWithError(null!=this.worldTrackingSupport.isSupported,"check for world tracking support before running an AR session"),$.assertWithError(this.worldTrackingSupport.isSupported,"your device doesn't support world tracking"),$.assertWithError(!i.userFaceTrackingEnabled||this.worldTrackingSupport.supportsUserFaceTracking,"your device doesn't support user face tracking with world tracking");break;case"faceTracking":const s=Object.keys(e).find((e=>"type"!==e&&!this.#ye.includes(e)));$.assertWithError(!s,`invalid faceTracking configuration key "${s}"`);const r=e;$.assertWithError(null!=this.#oe.isSupported,"check for face tracking support before running an AR session"),$.assertWithError(this.faceTrackingSupport.isSupported,"your device doesn't support face tracking"),$.assertWithError(!r.isWorldTrackingEnabled||this.faceTrackingSupport.supportsWorldTracking,"your device doesn't support user world tracking with face tracking");break;case"bodyTracking":break;default:throw Error(`uncaught configuration type "${e.type}"`)}}async run(e){return this.#ee(),this.#ve(e),$.log("running with configuraton",e),this.#x({type:"run",configuration:e})}async pause(){return $.log("pause..."),this.#x({type:"pause"})}#me=["worldTracking","faceTracking","bodyTracking"];get allConfigurationTypes(){return this.#me}#fe=["userFaceTrackingEnabled","planeDetection","frameSemantics"];#ye=["isWorldTrackingEnabled","maximumNumberOfTrackedFaces"];#Se=null;get configuration(){return this.#Se}async#pe(){return this.#ee(),this.#te(),$.log("checking configuration..."),this.#x({type:"configuration"})}#be(e){this.#Se=e,$.log("updated configuration",this.configuration),this.#O({type:"configuration",message:{configuration:this.configuration}})}#ke=null;get frame(){return this.#ke}#Ue(e){this.#ke=e,$.log("received frame",this.frame),this.#O({type:"frame",message:{frame:this.frame}}),this.#Ie(e.camera),e.lightEstimate&&this.#we(e.lightEstimate),this.#Ce(e.faceAnchors||[]),this.#Ee(e.planeAnchors||[]),this.#Ae(e.bodyAnchors||[])}#Te=null;get camera(){return this.#Te}#Ie(e){this.#Te=e,$.log("received camera",this.camera),this.#O({type:"camera",message:{camera:this.camera}})}#De=null;get lightEstimate(){return this.#De}#we(e){this.#De=e,$.log("received lightEstimate",this.lightEstimate),this.#O({type:"lightEstimate",message:{lightEstimate:this.lightEstimate}})}#Oe=null;get faceAnchors(){return this.#Oe}#Ce(e){this.#Oe=e,$.log("received faceAnchors",this.faceAnchors),this.#O({type:"faceAnchors",message:{faceAnchors:this.faceAnchors}})}#Pe=null;get planeAnchors(){return this.#Pe}#Ee(e){this.#Pe=e,$.log("received planeAnchors",this.planeAnchors),this.#O({type:"planeAnchors",message:{planeAnchors:this.planeAnchors}})}#Me=null;get bodyAnchors(){return this.#Me}#Ae(e){this.#Me=e,$.log("received bodyAnchors",this.bodyAnchors),this.#O({type:"bodyAnchors",message:{bodyAnchors:this.bodyAnchors}})}#Le=["none","showAnchorGeometry","showAnchorOrigins","showFeaturePoints","showPhysics","showSceneUnderstanding","showStatistics","showWorldOrigin"];get allDebugOptions(){return this.#Le}#Ve=null;get debugOptions(){return this.#Ve}#We(e){this.#Ve=e,$.log("received debugOptions",this.debugOptions),this.#O({type:"debugOptions",message:{debugOptions:this.debugOptions}})}async setDebugOptions(e){this.#ee(),$.assertWithError("object"==typeof e,"debugOptions must be an object",e);const t=Object.keys(e).find((e=>!this.#Le.includes(e)));return $.assertWithError(!t,`invalid debugOptions key ${t}`),$.log("setting debugOptions...",e),this.#x({type:"debugOptions",debugOptions:e})}#Re=!1;get checkDebugOptionsOnLoad(){return this.#Re}set checkDebugOptionsOnLoad(e){$.assertTypeWithError(e,"boolean"),this.#Re=e}#$e=["ar","nonAR"];get allCameraModes(){return this.#$e}#_e=null;get cameraMode(){return this.#_e}async setCameraMode(e){this.#ee();const t=this.#$e.includes(e);if($.assertWithError(t,`invalid cameraMode "${e}"`),e!=this.#_e)return $.log("setting cameraMode...",e),this.#x({type:"cameraMode",cameraMode:e});$.log(`cameraMode is already set to "${this.#_e}"`)}#xe=!1;get checkCameraModeOnLoad(){return this.#xe}set checkCameraModeOnLoad(e){$.assertTypeWithError(e,"boolean"),this.#xe=e}#Ne(e){this.#_e!=e&&(this.#_e=e,$.log(`updated cameraMode to ${this.cameraMode}`),this.#O({type:"cameraMode",message:{cameraMode:this.cameraMode}}))}#je=null;get showCamera(){return this.#je}#Fe(e){this.#je!=e&&(this.#je=e,$.log(`updated showCamera to ${this.showCamera}`),this.#O({type:"showCamera",message:{showCamera:this.showCamera}}))}#Be=!1;get checkShowCameraOnLoad(){return this.#Be}set checkShowCameraOnLoad(e){$.assertTypeWithError(e,"boolean"),this.#Be=e}async setShowCamera(e){if(this.#ee(),e!=this.#je)return $.log("setting showCamera...",e),this.#x({type:"showCamera",showCamera:e});$.log(`showCamera is already set to "${this.#je}"`)}#Ge={faceAnchorBlendshapes:!1,faceAnchorGeometry:!1,faceAnchorEyes:!1};get messageConfiguration(){return this.#Ge}async setMessageConfiguration(e){return this.#ee(),$.log("setting messageConfiguration...",e),this.#x({type:"messageConfiguration",messageConfiguration:e})}#Ke(e){this.#Ge=e,$.log("updated messageConfiguration",this.messageConfiguration),this.#O({type:"messageConfiguration",message:{messageConfiguration:this.messageConfiguration}})}#V(e){$.log(`received background message of type ${e.type}`,e);const{type:t}=e;switch(t){case"faceTrackingSupport":$.log("received faceTrackingSupport message",e),this.#he(e.faceTrackingSupport);break;case"worldTrackingSupport":$.log("received worldTrackingSupport message",e),this.#se(e.worldTrackingSupport);break;case"bodyTrackingSupport":$.log("received bodyTrackingSupport message",e),this.#ne(e.bodyTrackingSupport);break;case"isRunning":$.log("received isRunning message",e),this.#de(e.isRunning);break;case"configuration":$.log("received configuration message",e),this.#be(e.configuration);break;case"debugOptions":$.log("received debugOptions message",e),this.#We(e.debugOptions);break;case"cameraMode":$.log("received cameraMode message",e),this.#Ne(e.cameraMode);break;case"frame":$.log("received frame message",e),this.#Ue(e.frame);break;case"showCamera":$.log("received showCamera message",e),this.#Fe(e.showCamera);break;case"messageConfiguration":$.log("received messageConfiguration message",e),this.#Ke(e.messageConfiguration);break;default:throw Error(`uncaught message type ${t}`)}}}var x=_.shared;const N=c("Timer",{log:!1});class j{constructor(e,t,i=!1){N.log("creating timer",{callback:e,interval:t,runImmediately:i}),this.#He=e,this.#v=t,i&&this.start()}#He;#v;get interval(){return this.#v}set interval(e){N.assertTypeWithError(e,"number"),e!=this.#v?(this.#v=e,this.isRunning&&this.#p()):N.warn("same interval value",e)}#m=null;get isRunning(){return null!=this.#m}start(){N.assertWithError(!this.isRunning,"timer already running"),this.#m=window.setInterval(this.#He,this.#v)}stop(){this.isRunning?(window.clearInterval(this.#m),this.#m=null):N.assert("timer is already not running")}#p(){this.stop(),this.start()}}var F=Object.freeze({__proto__:null,areObjectsEqual:R,checkIfNativeWebKitEnabled:f,checkIfSafariExtensionIsInstalled:v,colorTemperatureToRGB:function(e){var t,i,s,r=e/100;return r<=66?(t=255,i=r,i=99.4708025861*Math.log(i)-161.1195681661,r<=19?s=0:(s=r-10,s=138.5177312231*Math.log(s)-305.0447927307)):(t=r-60,t=329.698727446*Math.pow(t,-.1332047592),i=r-60,i=288.1221695283*Math.pow(i,-.0755148492),s=255),[t,i,s].map((e=>function(e,t,i){return e<t?t:e>i?i:e}(e/255,0,1)))},isInApp:g,isInSafari:p,isMac:m,is_iOS:y,openInApp:()=>{if(p){const e=document.createElement("a"),t=`nativewebkit://${location.href}`;l.log("attempting to open current link in App...",location.href,t),e.href=t,e.click()}else l.warn("unable to open link in app - not in safari")},setAllConsoleLevelFlags:function(e){n.setAllLevelFlags(e)},setConsoleLevelFlagsForType:function(e,t){n.setLevelFlagsForType(e,t)}});const B=c("CBCentral",{log:!1});class G{static#T=["state","isAvailable","isScanning","discoveredPeripheral","expiredDiscoveredPeripheral","peripheralConnectionState","peripheralRSSI","discoveredService","discoveredServices","discoveredCharacteristics","discoveredCharacteristic","characteristicNotifyValue","characteristicValue"];get eventTypes(){return G.#T}#D=new h(this.eventTypes);addEventListener(e,t,i){return this.#D.addEventListener(...arguments)}removeEventListener(e,t){return this.#D.removeEventListener(...arguments)}hasEventListener(e,t){return this.#D.hasEventListener(...arguments)}#O(e){return this.#D.dispatchEvent(e)}static#P=new G;static get shared(){return this.#P}#u="cbc";#M(e){return e.map((e=>Object.assign({},e,{type:`${this.#u}-${e.type}`})))}constructor(){B.assertWithError(!this.shared,"CBCentralManager is a singleton - use CBCentralManager.shared"),U(this.#L.bind(this),"window.load"),U(this.#V.bind(this),this.#u),U(this.#W.bind(this),"window.unload")}get isSupported(){return!0}#ee(){if(!this.isSupported)throw Error("not supported")}#L(){const e=[];return this.checkStateOnLoad&&e.push({type:"state"}),this.checkConnectedPeripheralsOnLoad&&e.push({type:"connectedPeripherals",serviceUUIDs:[]}),this.#M(e)}#W(){const e=[];return this.#qe&&this.#ze&&e.push({type:"stopScan"}),this.#Je&&this.#Qe.length>0&&e.push({type:"disconnectAll"}),this.#M(e)}async#x(e){return e.type=`${this.#u}-${e.type}`,A(e)}#Xe=!1;get checkStateOnLoad(){return this.#Xe}set checkStateOnLoad(e){B.assertTypeWithError(e,"boolean"),this.#Xe=e}#ze=!0;get stopScanOnUnload(){return this.#ze}set stopScanOnUnload(e){B.assertTypeWithError(e,"boolean"),this.#ze=e}#Je=!0;get disconnectOnUnload(){return this.#Je}set disconnectOnUnload(e){B.assertTypeWithError(e,"boolean"),this.#Je=e}#Ye=null;get state(){return this.#Ye||"unknown"}#Ze(e){this.#Ye!=e&&(this.#Ye=e,B.log("updated state",this.state),this.#O({type:"state",message:{state:this.state}}),this.#O({type:"isAvailable",message:{isAvailable:this.isAvailable}}),"poweredOn"==this.state&&this.#et(),"unknown"==this.#Ye?this.#tt.start():this.#tt.stop())}#tt=new M({type:"state"},this.#u,500);get isAvailable(){return"poweredOn"==this.state}#G(){this.#ee(),B.assertWithError(this.isAvailable,"not available")}#qe=null;get isScanning(){return Boolean(this.#qe)}#it(e){this.#qe!=e&&(this.#qe=e,B.log(`updated isScanning to ${this.#qe}`),this.#O({type:"isScanning",message:{isScanning:this.isScanning}}),this.#st.stop(),this.isScanning?(this.#rt.start(),this.#at.start()):(this.#rt.stop(),this.#at.stop()))}async#et(){return B.log("checking isScanning"),this.#x({type:"isScanning"})}#st=new M({type:"isScanning"},this.#u,50);#nt(){const e=Date.now();Object.entries(this.#ct).forEach((([t,i])=>{e-i.lastTimeUpdated>4e3&&(delete this.#ct[t],this.#O({type:"expiredDiscoveredPeripheral",message:{expiredDiscoveredPeripheral:i}}))}))}#at=new j(this.#nt.bind(this),1e3);async startScan(e){return this.#G(),B.assertWithError(!this.isScanning,"already scanning"),B.log("starting scan",e),this.#ct.length=0,this.#st.start(),this.#x({type:"startScan",scanOptions:e})}async stopScan(){return this.#G(),B.assertWithError(this.isScanning,"already not scanning"),B.log("stopping scan"),this.#st.start(),this.#x({type:"stopScan"})}async toggleScan(){return this.#G(),this.isScanning?this.stopScan():this.startScan()}#ct={};get discoveredPeripherals(){return this.#ct}#ot(e){B.assertWithError(e in this.#ct,`no discovered peripheral with identifier "${e}" found`)}#ht(e){e.forEach((e=>{this.#lt(e)}))}#lt(e){var t=this.#ct[e.identifier];t?Object.assign(t,e):(this.#ct[e.identifier]=e,t=e),t.lastTimeUpdated=Date.now(),this.#O({type:"discoveredPeripheral",message:{discoveredPeripheral:t}})}#rt=new M({type:"discoveredPeripherals"},this.#u,200);#Qe={};get peripherals(){return this.#Qe}#dt(e){const t=this.#Qe[e];return B.assertWithError(t,`no peripheral with identifier "${e}" found`),t}#pt(e){const t=this.#dt(e);return B.assertWithError("connected"==t.connectionState,"peripheral is not connected"),t}#gt(e,t){const i=this.#dt(e),s=i.services[t];return B.assert(s,`serviceUUID ${t} not found`),{peripheral:i,service:s}}#ut(e,t,i){const{peripheral:s,service:r}=this.#gt(e,t),a=r.characteristics[i];return B.assert(a,`characteristicUUID ${t} not found`),{peripheral:s,service:r,characteristic:a}}#vt(e,t,i,s){const{peripheral:r,service:a,characteristic:n}=this.#ut(e,t,i),c=n.descriptors[s];return B.assert(c,`descriptorUUID ${s} not found`),{peripheral:r,service:a,characteristic:n,descriptor:c}}async connect(e){this.#G();var t=this.#Qe[e.identifier];if(t)B.assertWithError("connected"!=t.connectionState&&!t.connectionState?.endsWith("ing"),`peripheral is in connectionState "${t.connectionState}"`);else{const i=this.#ct[e.identifier];this.#ot(e.identifier),t={identifier:e.identifier,name:i.name},this.#Qe[t.identifier]=t}return B.log("connecting to peripheral",e),t.connectionState=null,this.#ft.start(),g&&this.#yt({identifier:e.identifier,connectionState:"connecting"}),this.#x({type:"connect",connectOptions:e})}async disconnect(e){const t=this.#dt(e);return B.assertWithError(!t.connectionState.includes("disconnect"),"peripheral is already disconnected or disconnecting"),t.connectionState=null,this.#ft.start(),B.log("disconnecting from peripheral...",t),g&&this.#yt({identifier:e,connectionState:"disconnecting"}),this.#x({type:"disconnect",identifier:e})}#mt(){const e=Object.values(this.#Qe).filter((e=>!e.connectionState||e.connectionState?.endsWith("ing")));return e.length>0?e.map((e=>({type:"peripheralConnectionState",identifier:e.identifier}))):(this.#ft.stop(),[])}#ft=new M(this.#mt.bind(this),this.#u,200);#St=!1;get checkConnectedPeripheralsOnLoad(){return this.#St}set checkConnectedPeripheralsOnLoad(e){B.assertTypeWithError(e,"boolean"),this.#St=e}checkConnectedPeripherals(e){B.log("checkConnectedPeripherals",{serviceUUIDs:e}),this.#x({type:"connectedPeripherals",serviceUUIDs:e})}#bt(e){e.forEach((e=>{this.#Qe[e.identifier]=e,this.#yt({identifier:e.identifier,connectionState:e.connectionState},!0),Object.values(e.services).length>0&&this.#kt({identifier:e.identifier,services:e.services},!0)}))}#yt(e,t=!1){const i=this.#dt(e.identifier);(i.connectionState!=e.connectionState||t)&&(i.connectionState=e.connectionState,this.#O({type:"peripheralConnectionState",message:{peripheral:i}}),this.#Ut?this.#It.start():this.#It.stop())}get#Ut(){return Object.values(this.peripherals).some((e=>"connected"==e.connectionState))}#It=new M({type:"disconnectedPeripherals"},this.#u,2e3);#wt(e){e.forEach((e=>{this.#yt({identifier:e,connectionState:"disconnected"})}))}async readPeripheralRSSIs(...e){e.forEach((e=>{this.#dt(e)._pendingRSSI=!0})),e.length>0&&(this.#Ct.start(),this.#x({type:"readRSSI",identifiers:e}))}async readPeripheralRSSI(e){return this.readPeripheralRSSIs(e)}#Ct=new M(this.#Et.bind(this),this.#u,200);#Et(){const e=Object.values(this.#Qe).filter((e=>e._pendingRSSI));return e.length>0?{type:"getRSSI",peripherals:e.map((e=>({identifier:e.identifier,timestamp:e.rssiTimestamp})))}:(this.#Ct.stop(),[])}#At(e){e.forEach((e=>{const t=this.#Qe[e.identifier];t?(t.rssi=e.rssi,t.rssiTimestamp=e.timestamp,t._pendingRSSI=!1,this.#O({type:"peripheralRSSI",message:{peripheral:t}}),this.#Tt&&this.#Ct.stop()):B.error("no peripheral found for peripheralRSSI",e)}))}get#Tt(){return Object.values(this.peripherals).some((e=>e._pendingRSSI))}async discoverServices(e,t){const i=this.#pt(e);if(t&&(t=t.filter((e=>i.services?.[e]?(B.error("already have service",{peripheral:i,serviceUUID:e}),!1):!i._pendingServices?.[e]&&!i._pendingIncludedServices?.[e]))),B.log("discovering services",{identifier:e,serviceUUIDs:t}),i._pendingServices||(i._pendingServices=[]),t?.length>0&&i._pendingServices.push(...t),!t||t.length>0)return this.#Dt.start(),this.#x({type:"discoverServices",identifier:e,serviceUUIDs:t})}async discoverService(e,t){return this.discoverServices(e,[t])}#Dt=new M(this.#Ot.bind(this),this.#u,100);#Ot(){const e=[];return Object.values(this.#Qe).filter((e=>"connected"==e.connectionState&&e._pendingServices)).forEach((t=>{const i={type:"getServices",identifier:t.identifier,serviceUUIDs:t._pendingServices};0==t._pendingServices.length&&(i.serviceUUIDs=null),e.push(i)})),0==e.length&&this.#Dt.stop(),e}async discoverIncludedServices(e,t,i){const s=this.#pt(e);if(this.#gt(e,t),i&&(i=i.filter((e=>s.services[e]?(B.error("already have includedService",{peripheral:s,includedServiceUUID:e}),!1):!s._pendingServices?.[t]&&!s._pendingIncludedServices?.[t]))),B.log("discovering includedServices",{identifier:e,serviceUUID:t,includedServiceUUIDs:i}),s._pendingServices||(s._pendingServices=[]),i?.length>0&&s._pendingIncludedServices.push(...i),!i||i.length>0)return this.#Pt.start(),this.#x({type:"discoverIncludedServices",identifier:e,serviceUUID:t,includedServiceUUIDs:i})}async discoverIncludedService(e,t,i){return this.discoverIncludedServices(e,t,[i])}#Pt=new M(this.#Mt.bind(this),this.#u,500);#Mt(){}async discoverCharacteristics(e,t,i){const{service:s}=this.#gt(e,t);if(i&&(i=i.filter((e=>!s.characteristics[e]||(B.error("already have characteristic",{peripheral:peripheral,characteristicUUID:e}),!1)))),B.log("discovering characteristics",{identifier:e,serviceUUID:t,characteristicUUIDs:i}),s._pendingCharacteristics||(s._pendingCharacteristics=[]),i?.length>0&&s._pendingCharacteristics.push(...i),!i||i.length>0)return this.#Lt.start(),this.#x({type:"discoverCharacteristics",identifier:e,serviceUUID:t,characteristicUUIDs:i})}async discoverCharacteristic(e,t,i){return this.discoverCharacteristics(e,t,[i])}#Lt=new M(this.#Vt.bind(this),this.#u,500);#Vt(){const e=[];return Object.values(this.#Qe).filter((e=>"connected"==e.connectionState)).forEach((t=>{Object.values(t.services).filter((e=>e._pendingCharacteristics)).forEach((i=>{const s={type:"getCharacteristics",identifier:t.identifier,serviceUUID:i.uuid,characteristicUUIDs:i._pendingCharacteristics};0==i._pendingCharacteristics.length&&delete s.characteristicUUIDs,e.push(s)}))})),0==e.length&&this.#Lt.stop(),e}async readCharacteristicValue(e,t,i){const{characteristic:s}=this.#ut(e,t,i);return B.log("reading characteristic value",{identifier:e,serviceUUID:t,characteristicUUID:i}),s._pendingValue=!0,this.#Wt.start(),this.#x({type:"readCharacteristicValue",identifier:e,serviceUUID:t,characteristicUUID:i})}async writeCharacteristicValue(e,t,i,s){const r=this.#pt(e),{service:a,characteristic:n}=this.#ut(e,t,i);return B.log("reading characteristic data",{peripheral:r,service:a,characteristic:n,data:s}),n.properties.read&&(n._pendingValue=!0,this.#Wt.start()),this.#x({type:"writeCharacteristicValue",identifier:e,serviceUUID:t,characteristicUUID:i,data:s})}#Wt=new M(this.#Rt.bind(this),this.#u,20);#Rt(){const e=[];if(Object.values(this.#Qe).forEach((t=>{if("connected"==t.connectionState){var i=!1;Object.values(t.services).some((e=>(Object.values(e.characteristics).some((e=>((e._pendingValue||e.isNotifying)&&(i=!0),i))),i))),i&&e.push({type:"updatedCharacteristicValues",identifier:t.identifier,timestamp:t._characteristicValueTimestamp||0})}})),e.length>0)return e;this.#Wt.stop()}async setCharacteristicNotifyValue(e,t,i,s){this.#pt(e);const{characteristic:r}=this.#ut(e,t,i);return B.assertWithError(r.properties.notify&&r.isNotifying!=s,`characteristic isNotifying already has value "${s}"`),B.log("setting characteristic notify value",{identifier:e,serviceUUID:t,characteristicUUID:i,notifyValue:s}),r._pendingIsNotifying=!0,this.#$t.start(),this.#x({type:"setCharacteristicNotifyValue",identifier:e,serviceUUID:t,characteristicUUID:i,notifyValue:s})}#$t=new M(this.#_t.bind(this),this.#u,100);#_t(){const e=[];return Object.values(this.#Qe).forEach((t=>{Object.values(t.services).forEach((i=>{Object.values(i.characteristics).forEach((s=>{s._pendingIsNotifying&&e.push({type:"getCharacteristicNotifyValue",identifier:t.identifier,serviceUUID:i.uuid,characteristicUUID:s.uuid})}))}))})),0==e.length&&this.#$t.stop(),e}async discoverDescriptors(e,t,i){return this.#ut(e,t,i),B.log("discovering descriptors",{identifier:e,serviceUUID:t,characteristicUUID:i}),this.#xt.start(),this.#x({type:"discoverDescriptors",identifier:e,serviceUUID:t,characteristicUUID:i})}#xt=new M(this.#Nt.bind(this),this.#u,500);#Nt(){}async readDescriptorValue(e,t,i,s,r){return this.#vt(e,t,i,s),B.log("reading descriptor value",{identifier:e,serviceUUID:t,characteristicUUID:i,descriptorUUID:s,timestamp:r}),this.#x({type:"readDescriptorValue",identifier:e,serviceUUID:t,characteristicUUID:i,descriptorUUID:s,timestamp:r})}async writeDescriptorValue(e,t,i,s,r){return this.#vt(e,t,i,s),B.log("writing descriptor value",{identifier:e,serviceUUID:t,characteristicUUID:i,descriptorUUID:s,value:r}),this.#jt.start(),this.#x({type:"writeDescriptorValue",identifier:e,serviceUUID:t,characteristicUUID:i,descriptorUUID:s,value:r})}#jt=new M(this.#Ft.bind(this),this.#u,500);#Ft(){}#kt({identifier:e,services:t},i=!1){const s=this.#pt(e);s.services||(s.services=[]);const r=Object.values(t).filter((t=>{if(!s.services[t.uuid]||i)return B.log("got service",{identifier:e,service:t}),s.services[t.uuid]=t,this.#O({type:"discoveredService",message:{discoveredService:t,peripheral:s}}),!0;B.warn("already have service",{identifier:e,service:t})}));s._pendingServices&&(s._pendingServices=s._pendingServices.filter((e=>!s.services[e])),0==s._pendingServices.length&&delete s._pendingServices),this.#O({type:"discoveredServices",message:{discoveredServices:r,peripheral:s}}),Object.values(t).forEach((t=>{Object.values(t.characteristics).length>0&&this.#Bt({identifier:e,serviceUUID:t.uuid,characteristics:t.characteristics},!0)}))}#Gt({identifier:e,serviceUUID:t,includedServices:i}){const{peripheral:s,service:r}=this.#gt(e,t),a=i.filter((t=>{if(!s.services[t.uuid])return B.log("got included service",{identifier:e,service:r,includedService:t}),s.services[t.uuid]=t,this.#O({type:"discoveredIncludedService",message:{discoveredIncludedService:t,peripheral:s,service:r}}),this.#O({type:"discoveredService",message:{discoveredService:t,peripheral:s,service:r}}),!0;B.warn("already have service",{identifier:e,includedService:t,service:r})}));this.#O({type:"discoveredIncludedServices",message:{discoveredIncludedServices:a,peripheral:s,service:r}}),this.#O({type:"discoveredServices",message:{discoveredServices:a,peripheral:s,service:r}})}#Bt({identifier:e,serviceUUID:t,characteristics:i},s=!1){const{peripheral:r,service:a}=this.#gt(e,t),n=Object.values(i).filter((t=>{B.log("got new characteristic",{identifier:e,service:a,characteristic:t}),!a.characteristics[t.uuid]||s?(a.characteristics[t.uuid]=t,this.#O({type:"discoveredCharacteristic",message:{discoveredCharacteristic:t,peripheral:r,service:a}})):B.warn("already have characteristic",{identifier:e,characteristic:t})}));a._pendingCharacteristics&&(a._pendingCharacteristics=a._pendingCharacteristics.filter((e=>!a.characteristics[e])),0==a._pendingCharacteristics.length&&delete a._pendingCharacteristics),this.#Kt&&this.#Wt.start(),this.#O({type:"discoveredCharacteristics",message:{discoveredCharacteristics:n,peripheral:r,service:a}})}#Ht({identifier:e,serviceUUID:t,characteristicUUID:i,value:s,timestamp:r}){const{peripheral:a,service:n,characteristic:c}=this.#ut(e,t,i);c.value=s,c.valueTimestamp=r,this.#O({type:"characteristicValue",message:{peripheral:a,service:n,characteristic:c}})}#qt({identifier:e,serviceUUID:t,characteristicUUID:i,isNotifying:s}){const{peripheral:r,service:a,characteristic:n}=this.#ut(e,t,i);n.isNotifying!=s&&(B.log("characteristic.isNotifying updated",{characteristic:n}),n.isNotifying=s,n._pendingIsNotifying=!1,this.#O({type:"characteristicNotifyValue",message:{peripheral:r,service:a,characteristic:n}}),this.#Kt&&this.#Wt.start())}get#Kt(){return Object.values(this.peripherals).filter((e=>"connected"==e.connectionState)).some((e=>Object.values(e.services).some((e=>Object.values(e.characteristics).some((e=>e.isNotifying))))))}#zt(e){e.forEach((e=>{const{identifier:t,serviceUUID:i,characteristicUUID:s,value:r,timestamp:a}=e,{peripheral:n,service:c,characteristic:o}=this.#ut(t,i,s);o.value=r,o.valueTimestamp=a,B.log("updated characteristicValue",{characteristic:o}),this.#O({type:"characteristicValue",message:{peripheral:n,service:c,characteristic:o}})}))}#Jt({identifier:e,serviceUUID:t,characteristicUUID:i,descriptors:s}){const{peripheral:r,service:a,characteristic:n}=this.#ut(e,t,i),c=s.filter((e=>{B.log("got new descriptor",{peripheral:r,service:a,characteristic:n,descriptor:e}),n.descriptors[e.uuid]?B.warn("already have descriptor",{peripheral:r,service:a,characteristic:n,descriptor:e}):(n.descriptors[e.uuid]=e,this.#O({type:"discoveredDescriptor",message:{discoveredDescriptor:e,peripheral:r,service:a,characteristic:n}}))}));this.#O({type:"discoveredDescriptors",message:{peripheral:r,service:a,characteristic:n,discoveredDescriptors:c}})}#Qt({identifier:e,serviceUUID:t,characteristicUUID:i,descriptorUUID:s,value:r}){const{peripheral:a,service:n,characteristic:c,descriptor:o}=this.#vt(e,t,i,s);o.value=r,B.log("descriptorValue",{descriptor:o}),this.#O({type:"descriptorValue",message:{peripheral:a,service:n,characteristic:c,descriptor:o}})}#V(e){B.log(`received background message of type ${e.type}`,e);const{type:t}=e;switch(t){case"state":B.log("received state message",e.state),this.#Ze(e.state);break;case"isScanning":B.log("received isScanning message",e.isScanning),this.#it(e.isScanning);break;case"discoveredPeripheral":B.log("received discoveredPeripheral message",e.discoveredPeripheral),this.#lt(e.discoveredPeripheral);break;case"discoveredPeripherals":B.log("received discoveredPeripherals message",e.discoveredPeripherals),this.#ht(e.discoveredPeripherals);break;case"peripheralConnectionState":B.log("received peripheralConnectionState message",e.peripheralConnectionState),this.#yt(e.peripheralConnectionState);break;case"connectedPeripherals":B.log("received connectedPeripherals message",e.connectedPeripherals),this.#bt(e.connectedPeripherals);break;case"disconnectedPeripherals":B.log("received disconnectedPeripherals message",e.disconnectedPeripherals),this.#wt(e.disconnectedPeripherals);break;case"getRSSI":B.log("received getRSSI message",e.peripheralRSSIs),this.#At(e.peripheralRSSIs);break;case"getServices":B.log("received getServices message",e.getServices),this.#kt(e.getServices);break;case"getIncludedServices":B.log("received getIncludedServices message",e.getIncludedServices),this.#Gt(e.getIncludedServices);break;case"getCharacteristics":B.log("received getCharacteristics message",e.getCharacteristics),this.#Bt(e.getCharacteristics);break;case"getCharacteristicValue":B.log("received getCharacteristicValue message",e.getCharacteristicValue),this.#Ht(e.getCharacteristicValue);break;case"getCharacteristicNotifyValue":B.log("received getCharacteristicNotifyValue message",e.getCharacteristicNotifyValue),this.#qt(e.getCharacteristicNotifyValue);break;case"updatedCharacteristicValues":B.log("received updatedCharacteristicValues message",e.updatedCharacteristicValues),this.#zt(e.updatedCharacteristicValues);break;case"getDescriptors":B.log("received getDescriptors message",e.getDescriptors),this.#Jt(e.getDescriptors);break;case"getDescriptorValue":B.log("received getDescriptorValue message",e.getDescriptorValue),this.#Qt(e.getDescriptorValue);break;default:throw Error(`uncaught message type ${t}`)}}}var K=G.shared;export{x as ARSessionManager,K as CBCentralManager,W as HeadphoneMotionManager,F as utils};
