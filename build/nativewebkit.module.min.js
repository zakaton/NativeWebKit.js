/**
 * @copyright Zack Qattan 2024
 * @license MIT
 */
const e=!1;function t(){}const s=console.log.bind(console),a=console.warn.bind(console),i=console.error.bind(console),n=console.assert.bind(console);class r{static#e={};constructor(e){if(r.#e[e])throw new Error(`"${e}" console already exists`);r.#e[e]=this}#t={log:e,warn:e,error:e};setLevelFlags(e){Object.assign(this.#t,e)}static setLevelFlagsForType(e,t){if(!this.#e[e])throw new Error(`no console found with type "${e}"`);this.#e[e].setLevelFlags(t)}static setAllLevelFlags(e){for(const t in this.#e)this.#e[t].setLevelFlags(e)}static create(e,t){return this.#e[e]||new r(e)}get log(){return this.#t.log?s:t}get warn(){return this.#t.warn?a:t}get error(){return this.#t.error?i:t}get assert(){return this.#t.assert?n:t}assertWithError(e,t){if(!e)throw new Error(t)}}function o(e,t){return r.create(e,t)}const c=o("EventDispatcher",{log:!1});class l{get eventTypes(){return[]}#s(e){return 0==this.eventTypes.length||this.eventTypes.includes(e)}#a(e){c.assertWithError(this.#s(e),`invalid event type "${e}"`)}#i;addEventListener(e,t,s){if(this.#a(e),this.#i||(this.#i={}),s?.once){const s=t;t=function t(a){s.apply(this,arguments),this.removeEventListener(e,t)}}const a=this.#i;a[e]||(a[e]=[]),a[e].includes(t)||a[e].push(t)}hasEventListener(e,t){return this.#a(e),this.#i?.[e]?.includes(t)}removeEventListener(e,t){if(this.#a(e),this.hasEventListener(e,t)){const s=this.#i[e].indexOf(t);return this.#i[e].splice(s,1),!0}return!1}dispatchEvent(e){if(this.#a(e.type),this.#i?.[e.type]){e.target=this;const t=this.#i[e.type].slice(0);for(let s=0,a=t.length;s<a;s++)t[s].call(this,e)}}get _prefix(){return""}_formatMessage(e){const t={...e};return t.type=`${this._prefix}-${e.type}`,t}}const h=o("platformUtils"),{userAgent:g}=navigator,d=/Safari/i.test(g)&&!/Chrome/i.test(g),p=/NativeWebKit/i.test(g);var u=Boolean(window.isNativeWebKitSafariExtensionInstalled);const v=async()=>!!(u=u||Boolean(window.isNativeWebKitSafariExtensionInstalled))||(h.log("checking if Safari Extension is installed..."),new Promise((e=>{const t=()=>{h.log("Safari Extension is installed"),u=!0,e(!0)};window.addEventListener("nativewebkit-extension-is-installed",t,{once:!0}),window.dispatchEvent(new Event("is-nativewebkit-extension-installed")),window.setTimeout((()=>{u||(h.log("Safari Extension is not installed"),window.removeEventListener("nativewebkit-extension-is-installed",t),e(!1))}),1)})));const m=async()=>!!(p||u)||await v(),f=/iPad|iPhone|iPod/.test(g),k=/Macintosh/.test(g),w=o("messaging"),b=new Set;const y={};function M(e,t){w.log(`adding callback with prefix "${t}"`,e),y[t]||(y[t]=[]),y[t].push(e)}function E(e){Array.isArray(e)||(e=[e]),e=e.flatMap((e=>"messages"==e.type?e.messages:e)),w.log("nativewebkit-receive messages",e),e.forEach((e=>{const[t,s]=e.type.split("-");w.log(`received "${t}" message of type "${s}"`,e),e.type=s,y[t]&&0!=y[t].length?y[t].forEach((t=>{w.log("triggering callback",t,"for message",e),t(e)})):w.warn("no callbacks listening for prefix",t)}))}window.__NATIVEWEBKIT_MESSAGING_FLAG__||(window.__NATIVEWEBKIT_MESSAGING_FLAG__=!0,w.log('adding "nativewebkit-receive" window listener'),window.addEventListener("nativewebkit-receive",(e=>{E(e.detail)})),window.addEventListener("load",(()=>{w.log("triggering window.load events...");const e=y["window.load"]?.map((e=>e())).flat().filter(Boolean);e.length>0&&T(e)})),window.addEventListener("unload",(()=>{w.log("triggering window.unload events...");const e=y["window.unload"]?.map((e=>e())).flat().filter(Boolean);e.length>0&&T(e)})));var S,O,A=[];async function T(e,t=!0){if(await m()){if(w.log("requesting to send message",e,"send immediately?",t),!e&&0==A.length)return void w.warn("no messages received, and no pending messages");if(e&&(0==A.length&&(S=new Promise((e=>{O=e}))),A.push(e),A=A.flat()),0==A.length)return void w.log("no messages to send");if(!t)return S;if(w.log("sending messages to app...",A),p){const e=await webkit.messageHandlers.nativewebkit_reply.postMessage(A);w.log("app response",e),e&&E(e),O(!0)}else{const e=function(){for(var e=0;b.has(e);)e++;return b.add(e),e}();window.dispatchEvent(new CustomEvent("nativewebkit-send",{detail:{message:A,id:e}})),window.addEventListener(`nativewebkit-receive-${e}`,(t=>{const s=t.detail;w.log(`did receive message for nativewebkit-receive-${e}?`,s),s||w.error(`didn't receive message for nativewebkit-receive-${e}`),O(s),b.delete(e)}),{once:!0})}return A.length=0,S}w.warn("NativeWebKit.js is not enabled - run in the NativeWebKit app or enable the NativeWebKit Safari Web Extension")}const L=o("mathUtils");function C(e,t){return 0===t?e:C(t,e%t)}function I(e){if(L.log("finding greatestCommonFactor of numbers",e),0==(e=e.filter((e=>e>0))).length)return null;const t=e.reduce(((e,t)=>C(e,t)));return L.log("greatestCommonFactor",t),0==t?null:t}const W=o("AppMessagePoll");class U{#n=!1;async#r(){if(!await m())return!1;if(p)return this.#n;return await v()}static#o=[];static#c(e){return this.#o.includes(e)?(W.log("poll already included"),this.#o.indexOf(e)):this.#o.push(e)}static#l(e){return this.#o.includes(e)?(e.stop(),this.#o.splice(e,e.#h),this.#g(),!0):(W.log("poll wasn't included"),!1)}get#h(){return U.#o.indexOf(this)}#d;#p;#u=0;get interval(){return this.#p}set interval(e){W.assertWithError(e>0,`invalid interval ${e}ms`),e!=this.#p?(this.#p=e,this.#v&&U.#g()):W.warn("assigning same interval")}constructor(e,t,s=!1){this.#d=e,this.#p=t,this.#n=s,U.#c(this)}static#m=null;static get#f(){return null!=this.#m}static#k=null;static get#w(){return this.#o.filter((e=>e.#b))}static get#y(){return this.#w.map((e=>e.#p))}static#M(){var e=I(this.#y);if(W.log(`new interval ${e}`),this.#k!=e)return W.log(`interval updated from ${this.#k} to ${e}`),this.#k=e,!0}static async#E(){const e=Date.now(),t=this.#w.filter((t=>e-t.#u>=t.#p)),s=t.map((e=>e.#d()));if(W.log("messages",s),s.length>0){const e=await T(s);W.log("didReceiveMessage?",e),e||W.error("app didn't receive message")}else W.log("no messages to send");t.forEach((t=>t.#u=e))}static#S(){this.#f?W.log("tried to start AppMessagePoll when it's already running"):null!=this.#k?(W.log(`starting interval at ${this.#k}`),this.#m=window.setInterval(this.#E.bind(this),this.#k)):W.log("null interval")}static#O(){this.#f?(window.clearInterval(this.#m),this.#m=null):W.log("tried to stop AppMessagePoll when it already isn't running")}static#g(e=!1){if(!this.#f&&!e)return;const t=this.#M();this.#f||t?(W.log("restarting..."),this.#O(),this.#S()):W.log("no need to restart")}#b=!1;get#v(){return U.#f&&this.#b}async start(){await this.#r()&&(this.#v?W.log("poll is already running"):(this.#b=!0,U.#g(!0)))}stop(){this.#v&&(this.#b=!1,U.#g())}destroy(){W.log("destroying poll",this),U.#l(this)}}const R=o("HeadphoneMotionManager");class D extends l{static#A=["isAvailable","isActive","motionData","sensorLocation"];get eventTypes(){return D.#A}static#T=new D;static get shared(){return this.#T}get _prefix(){return"hm"}_formatMessage(e){return super._formatMessage(e)}addEventListener(e,t,s){return super.addEventListener(...arguments)}removeEventListener(e,t){return super.removeEventListener(...arguments)}hasEventListener(e,t){return super.hasEventListener(...arguments)}dispatchEvent(e){return super.dispatchEvent(...arguments)}constructor(){super(),R.assertWithError(!this.shared,"HeadphoneMotionManager is a singleton - use HeadphoneMotionManager.shared"),M(this.#L.bind(this),"window.load"),M(this.#C.bind(this),this._prefix),M(this.#I.bind(this),"window.unload")}#L(){if(this.#W)return this.#U}#I(){if(this.#R&&this.#D)return this.#_}#W=!1;get checkAvailabilityOnLoad(){return this.#W}set checkAvailabilityOnLoad(e){R.assertWithError("boolean"==typeof e,"invalid newValue for checkAvailabilityOnLoad",e),this.#W=e}#D=!0;get stopUpdatesOnUnload(){return this.#D}set stopUpdatesOnUnload(e){R.assertWithError("boolean"==typeof e,"invalid newValue for stopUpdatesOnUnload",e),this.#D=e}#C(e){R.log(`received background message of type ${e.type}`,e);const{type:t}=e;switch(t){case"isAvailable":this.#F(e.isAvailable);break;case"isActive":this.#$(e.isActive);break;case"getData":this.#x(e.motionData);break;default:throw Error(`uncaught message type ${t}`)}}#P=null;get isAvailable(){return Boolean(this.#P)}#F(e){this.#P!=e&&(this.#P=e,R.log(`updated isAvailable to ${e}`),this.dispatchEvent({type:"isAvailable",message:{isAvailable:this.isAvailable}}),this.#P&&this.#V())}async#j(){return R.log("checking isAvailable..."),T(this.#U)}get#U(){return this._formatMessage({type:"isAvailable"})}#R=null;get isActive(){return Boolean(this.#R)}#$(e){this.#R!=e&&(this.#R=e,R.log(`updated isActive to ${this.isActive}`),this.dispatchEvent({type:"isActive",message:{isActive:this.isActive}}),this.#K.stop(),this.#R?(R.log("starting motion data poll"),this.#N.start()):(R.log("stopping motion data poll"),this.#N.stop()))}async#V(){return R.log("checking isActive"),T(this.#B())}#B(){return this._formatMessage({type:"isActive"})}#K=new U(this.#B.bind(this),50,!0);async startUpdates(){if(this.isAvailable){if(!this.isActive)return R.log("starting motion updates"),this.#K.start(),T(this.#G);R.warn("already active")}else R.warn("not available")}get#G(){return this._formatMessage({type:"startUpdates"})}async stopUpdates(){if(this.isAvailable){if(this.isActive)return R.log("stopping motion updates"),this.#K.start(),T(this.#_);R.warn("already inactive")}else R.warn("not available")}get#_(){return this._formatMessage({type:"stopUpdates"})}async toggleMotionUpdates(){if(this.isAvailable)return this.isActive?this.stopUpdates():this.startUpdates();R.log("not available")}#H;get motionData(){return this.#H}get#q(){return this.motionData?.timestamp||0}#z=null;get sensorLocation(){return this.#z}#J(e){this.#z!=e&&(this.#z=e,R.log(`updated sensor location to ${e}`),this.dispatchEvent({type:"sensorLocation",message:{sensorLocation:this.sensorLocation}}))}#x(e){this.#H=e,R.log("received headphone motion data",this.motionData),this.dispatchEvent({type:"motionData",message:{motionData:this.motionData}}),this.#J(e.sensorLocation)}async#Q(){return R.log("checkMotionData"),T(this.#X)}#X(){return this._formatMessage({type:"getData",timestamp:this.#q})}#N=new U(this.#X.bind(this),20)}var _=D.shared;function F(e,t){if("object"!=typeof e||"object"!=typeof t)return!1;const s=Object.keys(e),a=Object.keys(t);if(s.length!=a.length)return!1;return s.every((s=>s in t&&e[s]==t[s]))}const $=o("ARSession");class x extends l{static#A=["worldTrackingSupport","faceTrackingSupport","isRunning","frame","camera","faceAnchors","faceAnchor","debugOptions","cameraMode","configuration","showCamera","lightEstimate"];get eventTypes(){return x.#A}static#T=new x;static get shared(){return this.#T}get _prefix(){return"ars"}_formatMessage(e){return super._formatMessage(e)}addEventListener(e,t,s){return super.addEventListener(...arguments)}removeEventListener(e,t){return super.removeEventListener(...arguments)}hasEventListener(e,t){return super.hasEventListener(...arguments)}dispatchEvent(e){return super.dispatchEvent(...arguments)}constructor(){super(),$.assertWithError(!this.shared,"ARSessionManager is a singleton - use ARSessionManager.shared"),M(this.#L.bind(this),"window.load"),M(this.#C.bind(this),this._prefix),M(this.#I.bind(this),"window.unload")}get isSupported(){return f&&p}#Y(){if(!this.isSupported)throw k?Error("AR Session is not supported on Mac"):Error("AR Session not supported in iOS Safari")}#Z(){$.assertWithError(this.isRunning,"ARSession is not running")}#L(){if(!this.isSupported)return;const e=[];return this.checkFaceTrackingSupportOnLoad&&e.push(this.#ee),this.checkWorldTrackingSupportOnLoad&&e.push(this.#te),this.checkIsRunningOnLoad&&e.push(this.#se),this.checkDebugOptionsOnLoad&&e.push(this.#ae),this.checkCameraModeOnLoad&&e.push(this.#ie),this.checkShowCameraOnLoad&&e.push(this.#ne),e}#I(){if(!this.isSupported)return;const e=[];return this.pauseOnUnload&&this.isRunning&&e.push(this.#re),e}#oe={isSupported:!1,supportsUserFaceTracking:!1};get worldTrackingSupport(){return this.#oe}#ce(e){F(this.#oe,e)||(this.#oe=e,$.log("updated worldTrackingSupport",e),this.dispatchEvent({type:"worldTrackingSupport",message:{worldTrackingSupport:this.worldTrackingSupport}}))}#le=!1;get checkWorldTrackingSupportOnLoad(){return this.#le}set checkWorldTrackingSupportOnLoad(e){$.assertWithError("boolean"==typeof e,"invalid newValue for checkWorldTrackingSupportOnLoad",e),this.#le=e}async#he(){return this.#Y(),$.log("checking world tracking support..."),T(this.#te)}get#te(){return this._formatMessage({type:"worldTrackingSupport"})}#ge={isSupported:!1,supportsWorldTracking:!1};get faceTrackingSupport(){return this.#ge}#de(e){F(this.#ge,e)||(this.#ge=e,$.log("updated faceTrackingSupport",e),this.dispatchEvent({type:"faceTrackingSupport",message:{faceTrackingSupport:this.faceTrackingSupport}}))}#pe=!1;get checkFaceTrackingSupportOnLoad(){return this.#pe}set checkFaceTrackingSupportOnLoad(e){$.assertWithError("boolean"==typeof e,"invalid newValue for checkFaceTrackingSupportOnLoad",e),this.#pe=e}async#ue(){return this.#Y(),$.log("checking face tracking support..."),T(this.#ee)}get#ee(){return this._formatMessage({type:"faceTrackingSupport"})}#v=!1;get isRunning(){return this.#v}#ve(e){this.#v!=e&&(this.#v=e,$.log(`updated isRunning to ${e}`),this.dispatchEvent({type:"isRunning",message:{isRunning:this.isRunning}}),this.isRunning&&this.#me())}async#fe(){return this.#Y(),$.log("checking isRunning..."),T(this.#se)}get#se(){return this._formatMessage({type:"isRunning"})}#ke=!1;get checkIsRunningOnLoad(){return this.#ke}set checkIsRunningOnLoad(e){$.assertWithError("boolean"==typeof e,"invalid newValue for checkIsRunningOnLoad",e),this.#ke=e}#we=!0;get pauseOnUnload(){return this.#we}set pauseOnUnload(e){$.assertWithError("boolean"==typeof e,"invalid newValue for pauseOnUnload",e),this.#we=e}#be(e){switch($.log("assertConfigurationIsValid",e),$.assertWithError(e,"configuration required to run ARSession"),$.assertWithError(e.type,'"type" property required in configuration"'),$.assertWithError(this.allConfigurationTypes.includes(e.type),`invalid configuration type "${e.type}"`),e.type){case"worldTracking":const t=Object.keys(e).find((e=>"type"!==e&&!this.#ye.includes(e)));$.assertWithError(!t,`invalid worldTracking configuration key "${t}"`);const s=e;$.assertWithError(this.worldTrackingSupport.isSupported,"your device doesn't support world tracking"),$.assertWithError(!s.userFaceTrackingEnabled||this.worldTrackingSupport.supportsUserFaceTracking,"your device doesn't support user face tracking with world tracking");break;case"faceTracking":const a=Object.keys(e).find((e=>"type"!==e&&!this.#Me.includes(e)));$.assertWithError(!a,`invalid faceTracking configuration key "${a}"`);const i=e;$.assertWithError(this.faceTrackingSupport.isSupported,"your device doesn't support face tracking"),$.assertWithError(!i.isWorldTrackingEnabled||this.faceTrackingSupport.supportsWorldTracking,"your device doesn't support user world tracking with face tracking");break;default:throw Error(`uncaught configuration type "${e.type}"`)}}async run(e){return this.#Y(),this.#be(e),$.log("running with configuraton",e),T(this.#Ee(e))}#Ee(e){return this._formatMessage({type:"run",configuration:e})}async pause(){return $.log("pause..."),T(this.#re)}get#re(){return this._formatMessage({type:"pause"})}#Se=["worldTracking","faceTracking"];get allConfigurationTypes(){return this.#Se}#ye=["userFaceTrackingEnabled"];#Me=["isWorldTrackingEnabled","maximumNumberOfTrackedFaces"];#Oe=null;get configuration(){return this.#Oe}async#me(){return this.#Y(),this.#Z(),$.log("checking configuration..."),T(this.#Ae)}get#Ae(){return this._formatMessage({type:"configuration"})}#Te(e){this.#Oe=e,$.log("updated configuration",this.configuration),this.dispatchEvent({type:"configuration",message:{configuration:this.configuration}})}#Le=null;get frame(){return this.#Le}#Ce=null;get camera(){return this.#Ce}#Ie=null;get lightEstimate(){return this.#Ie}#We=null;get faceAnchors(){return this.#We}#Ue(e){this.#Le=e,$.log("received frame",this.frame),this.dispatchEvent({type:"frame",message:{frame:this.frame}}),this.#Re(e.camera),e.lightEstimate&&this.#De(e.lightEstimate),e.faceAnchors&&this.#_e(e.faceAnchors)}#Re(e){this.#Ce=e,$.log("received camera",this.camera),this.dispatchEvent({type:"camera",message:{camera:this.camera}})}#De(e){this.#Ie=e,$.log("received lightEstimate",this.lightEstimate),this.dispatchEvent({type:"lightEstimate",message:{lightEstimate:this.lightEstimate}})}#_e(e){this.#We=e,$.log("received faceAnchors",this.faceAnchors),this.dispatchEvent({type:"faceAnchors",message:{faceAnchors:this.faceAnchors}}),e.forEach((e=>{this.dispatchEvent({type:"faceAnchor",message:{faceAnchor:e}})}))}#Fe=["none","showAnchorGeometry","showAnchorOrigins","showFeaturePoints","showPhysics","showSceneUnderstanding","showStatistics","showWorldOrigin"];get allDebugOptions(){return this.#Fe}#$e=null;get debugOptions(){return this.#$e}#xe(e){this.#$e=e,$.log("received debugOptions",this.debugOptions),this.dispatchEvent({type:"debugOptions",message:{debugOptions:this.debugOptions}})}async#Pe(){return this.#Y(),$.log("checking debugOptions..."),T(this.#ae)}get#ae(){return this._formatMessage({type:"debugOptions"})}async setDebugOptions(e){this.#Y(),$.assertWithError("object"==typeof e,"debugOptions must be an object",e);const t=Object.keys(e).find((e=>!this.#Fe.includes(e)));return $.assertWithError(!t,`invalid debugOptions key ${t}`),$.log("setting debugOptions...",e),T(this.#Ve(e))}#Ve(e){return this._formatMessage({type:"debugOptions",debugOptions:e})}#je=!1;get checkDebugOptionsOnLoad(){return this.#je}set checkDebugOptionsOnLoad(e){$.assertWithError("boolean"==typeof e,"invalid newValue for checkDebugOptionsOnLoad",e),this.#je=e}#Ke=["ar","nonAR"];get allCameraModes(){return this.#Ke}#Ne=null;get cameraMode(){return this.#Ne}async#Be(){return this.#Y(),$.log("checking cameraMode..."),T(this.#ie)}get#ie(){return this._formatMessage({type:"cameraMode"})}#Ge(e){return this._formatMessage({type:"cameraMode",cameraMode:e})}async setCameraMode(e){this.#Y();const t=this.#Ke.includes(e);if($.assertWithError(t,`invalid cameraMode "${e}"`),e!=this.#Ne)return $.log("setting cameraMode...",e),T(this.#Ge(e));$.log(`cameraMode is already set to "${this.#Ne}"`)}#He=!1;get checkCameraModeOnLoad(){return this.#He}set checkCameraModeOnLoad(e){$.assertWithError("boolean"==typeof e,"invalid newValue for checkCameraModeOnLoad",e),this.#He=e}#qe(e){this.#Ne!=e&&(this.#Ne=e,$.log(`updated cameraMode to ${this.cameraMode}`),this.dispatchEvent({type:"cameraMode",message:{cameraMode:this.cameraMode}}))}#ze=null;get showCamera(){return this.#ze}async#Je(){return this.#Y(),$.log("checking showCamera..."),T(this.#ne)}#Qe(e){this.#ze!=e&&(this.#ze=e,$.log(`updated showCamera to ${this.showCamera}`),this.dispatchEvent({type:"showCamera",message:{showCamera:this.showCamera}}))}#Xe=!1;get checkShowCameraOnLoad(){return this.#Xe}set checkShowCameraOnLoad(e){$.assertWithError("boolean"==typeof e,"invalid newValue for checkShowCameraOnLoad",e),this.#Xe=e}async setShowCamera(e){if(this.#Y(),e!=this.#ze)return $.log("setting showCamera...",e),T(this.#Ye(e));$.log(`showCamera is already set to "${this.#ze}"`)}get#ne(){return this._formatMessage({type:"showCamera"})}#Ye(e){return this._formatMessage({type:"showCamera",showCamera:e})}#C(e){$.log(`received background message of type ${e.type}`,e);const{type:t}=e;switch(t){case"faceTrackingSupport":$.log("received faceTrackingSupport message",e),this.#de(e.faceTrackingSupport);break;case"worldTrackingSupport":$.log("received worldTrackingSupport message",e),this.#ce(e.worldTrackingSupport);break;case"isRunning":$.log("received isRunning message",e),this.#ve(e.isRunning);break;case"configuration":$.log("received configuration message",e),this.#Te(e.configuration);break;case"debugOptions":$.log("received debugOptions message",e),this.#xe(e.debugOptions);break;case"cameraMode":$.log("received cameraMode message",e),this.#qe(e.cameraMode);break;case"frame":$.log("received frame message",e),this.#Ue(e.frame);break;case"showCamera":$.log("received showCamera message",e),this.#Qe(e.showCamera);break;default:throw Error(`uncaught message type ${t}`)}}}var P=x.shared;var V=Object.freeze({__proto__:null,areObjectsEqual:F,checkIfNativeWebKitEnabled:m,checkIfSafariExtensionIsInstalled:v,colorTemperatureToRGB:function(e){var t,s,a,i=e/100;return i<=66?(t=255,s=i,s=99.4708025861*Math.log(s)-161.1195681661,i<=19?a=0:(a=i-10,a=138.5177312231*Math.log(a)-305.0447927307)):(t=i-60,t=329.698727446*Math.pow(t,-.1332047592),s=i-60,s=288.1221695283*Math.pow(s,-.0755148492),a=255),[t,s,a].map((e=>function(e,t,s){return e<t?t:e>s?s:e}(e/255,0,1)))},isInApp:p,isInSafari:d,isMac:k,is_iOS:f,openInApp:()=>{if(d){const e=document.createElement("a"),t=`nativewebkit://${location.href}`;h.log("attempting to open current link in App...",location.href,t),e.href=t,e.click()}else h.warn("unable to open link in app - not in safari")},setAllConsoleLevelFlags:function(e){r.setAllLevelFlags(e)},setConsoleLevelFlagsForType:function(e,t){r.setLevelFlagsForType(e,t)}});export{P as ARSessionManager,_ as HeadphoneMotionManager,V as utils};
