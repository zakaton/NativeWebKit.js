/**
 * @copyright Zack Qattan 2024
 * @license MIT
 */
class e{get eventTypes(){return[]}#e(e){return 0==this.eventTypes.length||this.eventTypes.includes(e)}#t(e){if(!this.#e(e))throw Error(`invalid event type "${e}"`)}#s;addEventListener(e,t,s){if(this.#t(e),this.#s||(this.#s={}),s?.once){const s=t;t=function t(i){s.apply(this,arguments),this.removeEventListener(e,t)}}const i=this.#s;i[e]||(i[e]=[]),i[e].includes(t)||i[e].push(t)}hasEventListener(e,t){return this.#t(e),this.#s?.[e]?.includes(t)}removeEventListener(e,t){if(this.#t(e),this.hasEventListener(e,t)){const s=this.#s[e].indexOf(t);return this.#s[e].splice(s,1),!0}return!1}dispatchEvent(e){if(this.#t(e.type),this.#s?.[e.type]){e.target=this;const t=this.#s[e.type].slice(0);for(let s=0,i=t.length;s<i;s++)t[s].call(this,e)}}get _prefix(){return""}_formatMessage(e){const t={...e};return t.type=`${this._prefix}-${e.type}`,t}}class t{#i=function(){};set prefix(e){const t=[console];e&&(Array.isArray(e)?t.push(...e):t.push(e)),this.#n=console.log.bind(...t),this.#a=console.warn.bind(...t),this.#r=console.error.bind(...t)}isLoggingEnabled=!0;get log(){return this.#i}#n=console.log.bind(console);isWarningEnabled=!0;get warn(){return this.#i}#a=console.warn.bind(console);isErrorEnabled=!0;get error(){return this.#i}#r=console.error.bind(console);set isEnabled(e){this.isLoggingEnabled=e,this.isWarningEnabled=e,this.isErrorEnabled=e}constructor(e){e&&(this.prefix=e)}}const s=new t,{userAgent:i}=navigator,n=/Safari/i.test(i)&&!/Chrome/i.test(i),a=/NativeWebKit/i.test(i);var r=Boolean(window.isNativeWebKitSafariExtensionInstalled);const o=async()=>!!(r=r||Boolean(window.isNativeWebKitSafariExtensionInstalled))||(s.log("checking if Safari Extension is installed..."),new Promise((e=>{const t=()=>{s.log("Safari Extension is installed"),r=!0,e(!0)};window.addEventListener("nativewebkit-extension-is-installed",t,{once:!0}),window.dispatchEvent(new Event("is-nativewebkit-extension-installed")),window.setTimeout((()=>{r||(s.log("Safari Extension is not installed"),window.removeEventListener("nativewebkit-extension-is-installed",t),e(!1))}),1)})));const l=async()=>!!(a||r)||await o(),c=/iPad|iPhone|iPod/.test(i),p=/Macintosh/.test(i),d=new t,g=new Set;const h={};function u(e,t){d.log(`adding callback with prefix "${t}"`,e),h[t]||(h[t]=[]),h[t].push(e)}function v(e){Array.isArray(e)||(e=[e]),d.log("nativewebkit-receive messages",e),e.forEach((e=>{const[t,s]=e.type.split("-");d.log(`received "${t}" message of type "${s}"`,e),e.type=s,h[t]&&0!=h[t].length?h[t].forEach((t=>{d.log("triggering callback",t,"for message",e),t(e)})):d.warn("no callbacks listening for prefix",t)}))}window.__NATIVEWEBKIT_MESSAGING_FLAG__||(window.__NATIVEWEBKIT_MESSAGING_FLAG__=!0,d.log('adding "nativewebkit-receive" window listener'),window.addEventListener("nativewebkit-receive",(e=>{v(e.detail)})),window.addEventListener("load",(()=>{d.log("triggering window.load events...");const e=h["window.load"]?.map((e=>e())).flat().filter(Boolean);e.length>0&&m(e)})),window.addEventListener("unload",(()=>{d.log("triggering window.unload events...");const e=h["window.unload"]?.map((e=>e())).flat().filter(Boolean);e.length>0&&m(e)})));var f,k,w=[];async function m(e,t=!0){if(await l()){if(d.log("requesting to send message",e,"send immediately?",t),!e&&0==w.length)return void d.warn("no messages received, and no pending messages");if(e&&(0==w.length&&(f=new Promise((e=>{k=e}))),w.push(e),w=w.flat()),0==w.length)return void d.log("no messages to send");if(!t)return f;if(d.log("sending messages to app...",w),a){const e=await webkit.messageHandlers.nativewebkit_reply.postMessage(w);d.log("app response",e),e&&v(e),k(!0)}else{const e=function(){for(var e=0;g.has(e);)e++;return g.add(e),e}();window.dispatchEvent(new CustomEvent("nativewebkit-send",{detail:{message:w,id:e}})),window.addEventListener(`nativewebkit-receive-${e}`,(t=>{const s=t.detail;d.log(`did receive message for nativewebkit-receive-${e}?`,s),s||d.error(`didn't receive message for nativewebkit-receive-${e}`),k(s),g.delete(e)}),{once:!0})}return w.length=0,f}d.warn("NativeWebKit.js is not enabled - run in the NativeWebKit app or enable the NativeWebKit Safari Web Extension")}const b=new t;function y(e,t){return 0===t?e:y(t,e%t)}function E(e){if(b.log("finding greatestCommonFactor of numbers",e),0==(e=e.filter((e=>e>0))).length)return null;const t=e.reduce(((e,t)=>y(e,t)));return b.log("greatestCommonFactor",t),0==t?null:t}const A=new t("AppMessagePoll");class S{#o=!1;async#l(){if(!await l())return!1;if(a)return this.#o;return await o()}static#c=[];static#p(e){return this.#c.includes(e)?(A.log("poll already included"),this.#c.indexOf(e)):this.#c.push(e)}static#d(e){return this.#c.includes(e)?(e.stop(),this.#c.splice(e,e.#g),this.#h(),!0):(A.log("poll wasn't included"),!1)}get#g(){return S.#c.indexOf(this)}#u;#v;#f=0;get interval(){return this.#v}set interval(e){e<=0?A.error(`invalid interval ${e}ms`):e!=this.#v?(this.#v=e,this.#k&&S.#h()):A.warn("assigning same interval")}constructor(e,t,s=!1){this.#u=e,this.#v=t,this.#o=s,S.#p(this)}static#w=null;static get#m(){return null!=this.#w}static#b=null;static get#y(){return this.#c.filter((e=>e.#E))}static get#A(){return this.#y.map((e=>e.#v))}static#S(){var e=E(this.#A);if(A.log(`new interval ${e}`),this.#b!=e)return A.log(`interval updated from ${this.#b} to ${e}`),this.#b=e,!0}static async#M(){const e=Date.now(),t=this.#y.filter((t=>e-t.#f>=t.#v)),s=t.map((e=>e.#u()));if(A.log("messages",s),s.length>0){const e=await m(s);A.log("didReceiveMessage?",e),e||A.error("app didn't receive message")}else A.log("no messages to send");t.forEach((t=>t.#f=e))}static#T(){this.#m?A.log("tried to start AppMessagePoll when it's already running"):null!=this.#b?(A.log(`starting interval at ${this.#b}`),this.#w=window.setInterval(this.#M.bind(this),this.#b)):A.log("null interval")}static#L(){this.#m?(window.clearInterval(this.#w),this.#w=null):A.log("tried to stop AppMessagePoll when it already isn't running")}static#h(e=!1){if(!this.#m&&!e)return;const t=this.#S();this.#m||t?(A.log("restarting..."),this.#L(),this.#T()):A.log("no need to restart")}#E=!1;get#k(){return S.#m&&this.#E}async start(){await this.#l()&&(this.#k?A.log("poll is already running"):(this.#E=!0,S.#h(!0)))}stop(){this.#k&&(this.#E=!1,S.#h())}destroy(){A.log("destroying poll",this),S.#d(this)}}const M=new t("HeadphoneMotionManager");class T extends e{static#I=["isAvailable","isActive","motionData","sensorLocation"];get eventTypes(){return T.#I}static#O=new T;static get shared(){return this.#O}get _prefix(){return"hm"}_formatMessage(e){return super._formatMessage(e)}addEventListener(e,t,s){return super.addEventListener(...arguments)}removeEventListener(e,t){return super.removeEventListener(...arguments)}hasEventListener(e,t){return super.hasEventListener(...arguments)}dispatchEvent(e){return super.dispatchEvent(...arguments)}constructor(){if(super(),this.shared)throw new Error("HeadphoneMotionManager is a singleton - use HeadphoneMotionManager.shared");u(this.#U.bind(this),"window.load"),u(this.#R.bind(this),this._prefix),u(this.#_.bind(this),"window.unload")}#U(){if(this.#W)return this.#x}#_(){if(this.#D&&this.#F)return this.#$}#W=!1;get checkAvailabilityOnLoad(){return this.#W}set checkAvailabilityOnLoad(e){if("boolean"!=typeof e)throw Error("invalid newValue for checkAvailabilityOnLoad",e);this.#W=e}#F=!0;get stopUpdatesOnUnload(){return this.#F}set stopUpdatesOnUnload(e){if("boolean"!=typeof e)throw Error("invalid newValue for stopUpdatesOnUnload",e);this.#F=e}#R(e){M.log(`received background message of type ${e.type}`,e);const{type:t}=e;switch(t){case"isAvailable":this.#P(e.isAvailable);break;case"isActive":this.#N(e.isActive);break;case"getData":this.#V(e.motionData);break;default:M.error(`uncaught message type ${t}`)}}#C=null;get isAvailable(){return Boolean(this.#C)}#P(e){this.#C!=e&&(this.#C=e,M.log(`updated isAvailable to ${e}`),this.dispatchEvent({type:"isAvailable",message:{isAvailable:this.isAvailable}}),this.#C&&this.checkIsActive())}async checkIsAvailable(){return M.log("checking isAvailable..."),m(this.#x)}get#x(){return this._formatMessage({type:"isAvailable"})}#D=null;get isActive(){return Boolean(this.#D)}#N(e){this.#D!=e&&(this.#D=e,M.log(`updated isActive to ${this.isActive}`),this.dispatchEvent({type:"isActive",message:{isActive:this.isActive}}),this.#K.stop(),this.#D?(M.log("starting motion data poll"),this.#B.start()):(M.log("stopping motion data poll"),this.#B.stop()))}async checkIsActive(){return M.log("checking isActive"),m(this.#j())}#j(){return this._formatMessage({type:"isActive"})}#K=new S(this.#j.bind(this),50,!0);async startUpdates(){if(this.isAvailable){if(!this.isActive)return M.log("starting motion updates"),this.#K.start(),m(this.#G);M.warn("already active")}else M.warn("not available")}get#G(){return this._formatMessage({type:"startUpdates"})}async stopUpdates(){if(this.isAvailable){if(this.isActive)return M.log("stopping motion updates"),this.#K.start(),m(this.#$);M.warn("already inactive")}else M.warn("not available")}get#$(){return this._formatMessage({type:"stopUpdates"})}async toggleMotionUpdates(){if(this.isAvailable)return this.isActive?this.stopUpdates():this.startUpdates();M.log("not available")}#H;get motionData(){return this.#H}get#q(){return this.motionData?.timestamp||0}#z=null;get sensorLocation(){return this.#z}#J(e){this.#z!=e&&(this.#z=e,M.log(`updated sensor location to ${e}`),this.dispatchEvent({type:"sensorLocation",message:{sensorLocation:this.sensorLocation}}))}#V(e){this.#H=e,M.log("received headphone motion data",this.motionData),this.dispatchEvent({type:"motionData",message:{motionData:this.motionData}}),this.#J(e.sensorLocation)}async checkMotionData(){return M.log("checkMotionData"),m(this.#Q)}#Q(){return this._formatMessage({type:"getData",timestamp:this.#q})}#B=new S(this.#Q.bind(this),20)}var L=T.shared;function I(e,t){if("object"!=typeof e||"object"!=typeof t)return!1;const s=Object.keys(e),i=Object.keys(t);if(s.length!=i.length)return!1;return s.every((s=>s in t&&e[s]==t[s]))}const O=new t("ARSession");class U extends e{static#I=["worldTrackingSupport","faceTrackingSupport","isRunning","frame","camera"];get eventTypes(){return U.#I}static#O=new U;static get shared(){return this.#O}get _prefix(){return"ars"}_formatMessage(e){return super._formatMessage(e)}addEventListener(e,t,s){return super.addEventListener(...arguments)}removeEventListener(e,t){return super.removeEventListener(...arguments)}hasEventListener(e,t){return super.hasEventListener(...arguments)}dispatchEvent(e){return super.dispatchEvent(...arguments)}constructor(){if(super(),this.shared)throw new Error("ARSessionManager is a singleton - use ARSessionManager.shared");u(this.#U.bind(this),"window.load"),u(this.#R.bind(this),this._prefix),u(this.#_.bind(this),"window.unload")}get isSupported(){return c&&a}#X(){p?O.warn("AR Session is not supported on Mac"):O.warn("AR Session not supported in iOS Safari")}#U(){if(!this.isSupported)return;const e=[];return this.checkFaceTrackingSupportOnLoad&&e.push(this.#Y),this.checkWorldTrackingSupportOnLoad&&e.push(this.#Z),this.checkIsRunningOnLoad&&e.push(this.#ee),e}#_(){if(!this.isSupported)return;const e=[];return this.pauseOnUnload&&this.isRunning&&e.push(this.#te),e}#se={isSupported:!1,supportsUserFaceTracking:!1};get worldTrackingSupport(){return this.#se}#ie(e){I(this.#se,e)||(this.#se=e,O.log("updated worldTrackingSupport",e),this.dispatchEvent({type:"worldTrackingSupport",message:{worldTrackingSupport:this.worldTrackingSupport}}))}#ne=!1;get checkWorldTrackingSupportOnLoad(){return this.#ne}set checkWorldTrackingSupportOnLoad(e){if("boolean"!=typeof e)throw Error("invalid newValue for checkWorldTrackingSupportOnLoad",e);this.#ne=e}async checkWorldTrackingSupport(){if(this.isSupported)return O.log("checking world tracking support..."),m(this.#Z);this.#X()}get#Z(){return this._formatMessage({type:"worldTrackingSupport"})}#ae={isSupported:!1,supportsWorldTracking:!1};get faceTrackingSupport(){return this.#ae}#re(e){I(this.#ae,e)||(this.#ae=e,O.log("updated faceTrackingSupport",e),this.dispatchEvent({type:"faceTrackingSupport",message:{faceTrackingSupport:this.faceTrackingSupport}}))}#oe=!1;get checkFaceTrackingSupportOnLoad(){return this.#oe}set checkFaceTrackingSupportOnLoad(e){if("boolean"!=typeof e)throw Error("invalid newValue for checkFaceTrackingSupportOnLoad",e);this.#oe=e}async checkFaceTrackingSupport(){if(this.isSupported)return O.log("checking face tracking support..."),m(this.#Y);this.#X()}get#Y(){return this._formatMessage({type:"faceTrackingSupport"})}#k=!1;get isRunning(){return this.#k}#le(e){this.#k!=e&&(this.#k=e,O.log(`updated isRunning to ${e}`),this.dispatchEvent({type:"isRunning",message:{isRunning:this.isRunning}}))}async checkIsRunning(){if(this.isSupported)return O.log("checking isRunning..."),m(this.#ee);this.#X()}get#ee(){return this._formatMessage({type:"isRunning"})}#ce=!1;get checkIsRunningOnLoad(){return this.#ce}set checkIsRunningOnLoad(e){if("boolean"!=typeof e)throw Error("invalid newValue for checkIsRunningOnLoad",e);this.#ce=e}#pe=!0;get pauseOnUnload(){return this.#pe}set pauseOnUnload(e){if("boolean"!=typeof e)throw Error("invalid newValue for pauseOnUnload",e);this.#pe=e}async run(){return O.log("run..."),m(this.#de)}get#de(){return this._formatMessage({type:"run"})}async pause(){return O.log("pause..."),m(this.#te)}get#te(){return this._formatMessage({type:"pause"})}#ge=null;get frame(){return this.#ge}#he;get camera(){return this.#he}#ue(e){this.#ge=e,O.log("received frame",this.frame),this.dispatchEvent({type:"frame",message:{frame:this.frame}}),this.#ve(e.camera)}#ve(e){this.#he=e,O.log("received camera",this.camera),this.dispatchEvent({type:"camera",message:{camera:this.camera}})}#R(e){O.log(`received background message of type ${e.type}`,e);const{type:t}=e;switch(t){case"faceTrackingSupport":O.log("received faceTrackingSupport message",e),this.#re(e.faceTrackingSupport);break;case"worldTrackingSupport":O.log("received worldTrackingSupport message",e),this.#ie(e.worldTrackingSupport);break;case"isRunning":O.log("received isRunning message",e),this.#le(e.isRunning);break;case"frame":O.log("received frame message",e),this.#ue(e.frame);break;default:O.error(`uncaught message type ${t}`)}}}var R=U.shared,_=Object.freeze({__proto__:null,areObjectsEqual:I,checkIfNativeWebKitEnabled:l,checkIfSafariExtensionIsInstalled:o,isInApp:a,isInSafari:n,isMac:p,is_iOS:c,openInApp:()=>{if(n){const e=document.createElement("a"),t=`nativewebkit://${location.href}`;s.log("attempting to open current link in App...",location.href,t),e.href=t,e.click()}else s.warn("unable to open link in app - not in safari")}});export{R as ARSessionManager,L as HeadphoneMotionManager,_ as utils};
